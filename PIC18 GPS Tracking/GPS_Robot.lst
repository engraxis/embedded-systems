;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 6/6/2013 8:50:38 AM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF06	F003			GOTO	_main
$0BD4	$	_Delay_1us:
;Delays.c,7 :: 			void Delay_1us() {
;Delays.c,8 :: 			Delay_us(1);
$0BD4	$0E01	    			MOVLW	1
$0BD6	$6E0A	    			MOVWF	STACK_10, 0
$0BD8	$2E0A	    			DECFSZ	STACK_10, F, 0
$0BDA	$D7FE	    			BRA	$-1
$0BDC	$0000	    			NOP
;Delays.c,9 :: 			}
$0BDE	$0012	    			RETURN
$0B7E	$	_Delay_5500us:
;Delays.c,31 :: 			void Delay_5500us() {
;Delays.c,32 :: 			Delay_us(5500);
$0B7E	$0E24	    			MOVLW	36
$0B80	$6E0B	    			MOVWF	STACK_11, 0
$0B82	$0EFF	    			MOVLW	255
$0B84	$6E0A	    			MOVWF	STACK_10, 0
$0B86	$2E0B	    			DECFSZ	STACK_11, F, 0
$0B88	$D001	    			BRA	$+2
$0B8A	$D003	    			BRA	$+4
$0B8C	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B8E	$D7FE	    			BRA	$-1
$0B90	$D7FA	    			BRA	$-5
$0B92	$0E9E	    			MOVLW	158
$0B94	$6E0A	    			MOVWF	STACK_10, 0
$0B96	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B98	$D7FE	    			BRA	$-1
;Delays.c,33 :: 			}
$0B9A	$0012	    			RETURN
$0BEC	$	_Delay_50us:
;Delays.c,19 :: 			void Delay_50us() {
;Delays.c,20 :: 			Delay_us(50);
$0BEC	$0E53	    			MOVLW	83
$0BEE	$6E0A	    			MOVWF	STACK_10, 0
$0BF0	$2E0A	    			DECFSZ	STACK_10, F, 0
$0BF2	$D7FE	    			BRA	$-1
;Delays.c,21 :: 			}
$0BF4	$0012	    			RETURN
$0A20	$	_Lcd_Cmd:
$0A20	$C015	F000			MOVFF	Lcd_main_global_portaddress, STACK_0
$0A24	$C016	F001			MOVFF	Lcd_main_global_portaddress+1, STACK_0+1
$0A28	$C000	F015			MOVFF	STACK_0, Lcd_main_global_portaddress
$0A2C	$C001	F016			MOVFF	STACK_0+1, Lcd_main_global_portaddress+1
$0A30	$C015	FFE9			MOVFF	lcd_main_global_portaddress+0, FSR0L
$0A34	$C016	FFEA			MOVFF	lcd_main_global_portaddress+1, FSR0H
$0A38	$5267	    			MOVF	FARG_Lcd_Cmd+0, 1, 0
$0A3A	$E000	    			BZ	L_Lcd_Cmd_0
$0A3C	$	L_Lcd_Cmd_0:
$0A3C	$96EF	    			BCF	INDF0, ___ENABLE, 0
$0A3E	$94EF	    			BCF	INDF0, ___RS, 0
$0A40	$9EEF	    			BCF	INDF0, ___DB7, 0
$0A42	$9CEF	    			BCF	INDF0, ___DB6, 0
$0A44	$9AEF	    			BCF	INDF0, ___DB5, 0
$0A46	$98EF	    			BCF	INDF0, ___DB4, 0
$0A48	$BE67	    			BTFSC	FARG_Lcd_Cmd+0, 7, 0
$0A4A	$8EEF	    			BSF	INDF0, ___DB7, 0
$0A4C	$BC67	    			BTFSC	FARG_Lcd_Cmd+0, 6, 0
$0A4E	$8CEF	    			BSF	INDF0, ___DB6, 0
$0A50	$BA67	    			BTFSC	FARG_Lcd_Cmd+0, 5, 0
$0A52	$8AEF	    			BSF	INDF0, ___DB5, 0
$0A54	$B867	    			BTFSC	FARG_Lcd_Cmd+0, 4, 0
$0A56	$88EF	    			BSF	INDF0, ___DB4, 0
$0A58	$5017	    			MOVF	Lcd_cmd_status, 0, 0
$0A5A	$0A01	    			XORLW	1
$0A5C	$E103	    			BNZ	L_Lcd_Cmd_1
$0A5E	$94EF	    			BCF	INDF0, ___RS, 0
$0A60	$EF33	F005			GOTO	L_Lcd_Cmd_2
$0A64	$	L_Lcd_Cmd_1:
$0A64	$84EF	    			BSF	INDF0, ___RS, 0
$0A66	$	L_Lcd_Cmd_2:
$0A66	$86EF	    			BSF	INDF0, ___ENABLE, 0
$0A68	$ECEA	F005			CALL	_Delay_1us
$0A6C	$5267	    			MOVF	FARG_Lcd_Cmd+0, 1, 0
$0A6E	$E000	    			BZ	L_Lcd_Cmd_3
$0A70	$	L_Lcd_Cmd_3:
$0A70	$96EF	    			BCF	INDF0, ___ENABLE, 0
$0A72	$94EF	    			BCF	INDF0, ___RS, 0
$0A74	$9EEF	    			BCF	INDF0, ___DB7, 0
$0A76	$9CEF	    			BCF	INDF0, ___DB6, 0
$0A78	$9AEF	    			BCF	INDF0, ___DB5, 0
$0A7A	$98EF	    			BCF	INDF0, ___DB4, 0
$0A7C	$B667	    			BTFSC	FARG_Lcd_Cmd+0, 3, 0
$0A7E	$8EEF	    			BSF	INDF0, ___DB7, 0
$0A80	$B467	    			BTFSC	FARG_Lcd_Cmd+0, 2, 0
$0A82	$8CEF	    			BSF	INDF0, ___DB6, 0
$0A84	$B267	    			BTFSC	FARG_Lcd_Cmd+0, 1, 0
$0A86	$8AEF	    			BSF	INDF0, ___DB5, 0
$0A88	$B067	    			BTFSC	FARG_Lcd_Cmd+0, 0, 0
$0A8A	$88EF	    			BSF	INDF0, ___DB4, 0
$0A8C	$5017	    			MOVF	Lcd_cmd_status, 0, 0
$0A8E	$0A01	    			XORLW	1
$0A90	$E103	    			BNZ	L_Lcd_Cmd_4
$0A92	$94EF	    			BCF	INDF0, ___RS, 0
$0A94	$EF4D	F005			GOTO	L_Lcd_Cmd_5
$0A98	$	L_Lcd_Cmd_4:
$0A98	$84EF	    			BSF	INDF0, ___RS, 0
$0A9A	$	L_Lcd_Cmd_5:
$0A9A	$86EF	    			BSF	INDF0, ___ENABLE, 0
$0A9C	$ECEA	F005			CALL	_Delay_1us
$0AA0	$96EF	    			BCF	INDF0, ___ENABLE, 0
$0AA2	$5017	    			MOVF	Lcd_cmd_status, 0, 0
$0AA4	$0A01	    			XORLW	1
$0AA6	$E103	    			BNZ	L_Lcd_Cmd_6
$0AA8	$ECBF	F005			CALL	_Delay_5500us
$0AAC	$D002	    			BRA	L_Lcd_Cmd_7
$0AAE	$	L_Lcd_Cmd_6:
$0AAE	$ECF6	F005			CALL	_Delay_50us
$0AB2	$	L_Lcd_Cmd_7:
$0AB2	$0012	    			RETURN
$0BE0	$	_Usart_Data_Ready:
$0BE0	$6A01	    			CLRF	STACK_1, 0
$0BE2	$BA9E	    			BTFSC	PIR1, 5, 0
$0BE4	$2A01	    			INCF	STACK_1, 1, 0
$0BE6	$C001	F000			MOVFF	STACK_1, STACK_0
$0BEA	$0012	    			RETURN
$0BB2	$	_Usart_Read:
$0BB2	$CFAE	F066			MOVFF	RCREG, Usart_Read_tmp_L0
$0BB6	$A2AB	    			BTFSS	RCSTA, 1, 0
$0BB8	$D002	    			BRA	L_Usart_Read_2
$0BBA	$98AB	    			BCF	RCSTA, 4, 0
$0BBC	$88AB	    			BSF	RCSTA, 4, 0
$0BBE	$	L_Usart_Read_2:
$0BBE	$C066	F000			MOVFF	Usart_Read_tmp_L0, STACK_0
$0BC2	$0012	    			RETURN
$0BC4	$	_Lcd_Chr_Cp:
$0BC4	$6A17	    			CLRF	Lcd_cmd_status, 0
$0BC6	$C066	F067			MOVFF	FARG_Lcd_Chr_Cp+0, FARG_Lcd_Cmd+0
$0BCA	$EC10	F005			CALL	_Lcd_Cmd
$0BCE	$0E01	    			MOVLW	1
$0BD0	$6E17	    			MOVWF	Lcd_cmd_status, 0
$0BD2	$0012	    			RETURN
$0008	$	_Div_32x32_U:
$0008	$0100	    			MOVLB	0
$000A	$6A0B	    			CLRF	STACK_11, 0
$000C	$6A0A	    			CLRF	STACK_10, 0
$000E	$6A09	    			CLRF	STACK_9, 0
$0010	$6A08	    			CLRF	STACK_8, 0
$0012	$6A0E	    			CLRF	STACK_14, 0
$0014	$3403	    			RLCF	STACK_3, W, 0
$0016	$3608	    			RLCF	STACK_8, F, 0
$0018	$5004	    			MOVF	STACK_4, W, 0
$001A	$5E08	    			SUBWF	STACK_8, F, 0
$001C	$5005	    			MOVF	STACK_5, W, 0
$001E	$A0D8	    			BTFSS	STATUS, C, 0
$0020	$3C05	    			INCFSZ	STACK_5, W, 0
$0022	$5E09	    			SUBWF	STACK_9, F, 0
$0024	$5006	    			MOVF	STACK_6, W, 0
$0026	$A0D8	    			BTFSS	STATUS, C, 0
$0028	$3C06	    			INCFSZ	STACK_6, W, 0
$002A	$5E0A	    			SUBWF	STACK_10, F, 0
$002C	$5007	    			MOVF	STACK_7, W, 0
$002E	$A0D8	    			BTFSS	STATUS, C, 0
$0030	$3C07	    			INCFSZ	STACK_7, W, 0
$0032	$5E0B	    			SUBWF	STACK_11, F, 0
$0034	$6AE8	    			CLRF	WREG, 0
$0036	$A0D8	    			BTFSS	STATUS, C, 0
$0038	$0E01	    			MOVLW	1
$003A	$5E0E	    			SUBWF	STACK_14, F, 0
$003C	$3603	    			RLCF	STACK_3, F, 0
$003E	$0E07	    			MOVLW	7
$0040	$6E0C	    			MOVWF	STACK_12, 0
$0042	$	LOOPU3232A:
$0042	$3403	    			RLCF	STACK_3, W, 0
$0044	$3608	    			RLCF	STACK_8, F, 0
$0046	$3609	    			RLCF	STACK_9, F, 0
$0048	$360A	    			RLCF	STACK_10, F, 0
$004A	$360B	    			RLCF	STACK_11, F, 0
$004C	$360E	    			RLCF	STACK_14, F, 0
$004E	$5004	    			MOVF	STACK_4, W, 0
$0050	$A003	    			BTFSS	STACK_3, 0, 0
$0052	$EF3E	F000			GOTO	UADD22LA
$0056	$5E08	    			SUBWF	STACK_8, F, 0
$0058	$5005	    			MOVF	STACK_5, W, 0
$005A	$A0D8	    			BTFSS	STATUS, C, 0
$005C	$3C05	    			INCFSZ	STACK_5, W, 0
$005E	$5E09	    			SUBWF	STACK_9, F, 0
$0060	$5006	    			MOVF	STACK_6, W, 0
$0062	$A0D8	    			BTFSS	STATUS, C, 0
$0064	$3C06	    			INCFSZ	STACK_6, W, 0
$0066	$5E0A	    			SUBWF	STACK_10, F, 0
$0068	$5007	    			MOVF	STACK_7, W, 0
$006A	$A0D8	    			BTFSS	STATUS, C, 0
$006C	$3C07	    			INCFSZ	STACK_7, W, 0
$006E	$5E0B	    			SUBWF	STACK_11, F, 0
$0070	$6AE8	    			CLRF	WREG, 0
$0072	$A0D8	    			BTFSS	STATUS, C, 0
$0074	$0E01	    			MOVLW	1
$0076	$5E0E	    			SUBWF	STACK_14, F, 0
$0078	$EF4F	F000			GOTO	UOK22LA
$007C	$	UADD22LA:
$007C	$2608	    			ADDWF	STACK_8, F, 0
$007E	$5005	    			MOVF	STACK_5, W, 0
$0080	$B0D8	    			BTFSC	STATUS, C, 0
$0082	$3C05	    			INCFSZ	STACK_5, W, 0
$0084	$2609	    			ADDWF	STACK_9, F, 0
$0086	$5006	    			MOVF	STACK_6, W, 0
$0088	$B0D8	    			BTFSC	STATUS, C, 0
$008A	$3C06	    			INCFSZ	STACK_6, W, 0
$008C	$260A	    			ADDWF	STACK_10, F, 0
$008E	$5007	    			MOVF	STACK_7, W, 0
$0090	$B0D8	    			BTFSC	STATUS, C, 0
$0092	$3C07	    			INCFSZ	STACK_7, W, 0
$0094	$260B	    			ADDWF	STACK_11, F, 0
$0096	$6AE8	    			CLRF	WREG, 0
$0098	$B0D8	    			BTFSC	STATUS, C, 0
$009A	$0E01	    			MOVLW	1
$009C	$260E	    			ADDWF	STACK_14, F, 0
$009E	$	UOK22LA:
$009E	$3603	    			RLCF	STACK_3, F, 0
$00A0	$2E0C	    			DECFSZ	STACK_12, F, 0
$00A2	$EF21	F000			GOTO	LOOPU3232A
$00A6	$3402	    			RLCF	STACK_2, W, 0
$00A8	$3608	    			RLCF	STACK_8, F, 0
$00AA	$3609	    			RLCF	STACK_9, F, 0
$00AC	$360A	    			RLCF	STACK_10, F, 0
$00AE	$360B	    			RLCF	STACK_11, F, 0
$00B0	$360E	    			RLCF	STACK_14, F, 0
$00B2	$5004	    			MOVF	STACK_4, W, 0
$00B4	$A003	    			BTFSS	STACK_3, 0, 0
$00B6	$EF70	F000			GOTO	UADD22L8
$00BA	$5E08	    			SUBWF	STACK_8, F, 0
$00BC	$5005	    			MOVF	STACK_5, W, 0
$00BE	$A0D8	    			BTFSS	STATUS, C, 0
$00C0	$3C05	    			INCFSZ	STACK_5, W, 0
$00C2	$5E09	    			SUBWF	STACK_9, F, 0
$00C4	$5006	    			MOVF	STACK_6, W, 0
$00C6	$A0D8	    			BTFSS	STATUS, C, 0
$00C8	$3C06	    			INCFSZ	STACK_6, W, 0
$00CA	$5E0A	    			SUBWF	STACK_10, F, 0
$00CC	$5007	    			MOVF	STACK_7, W, 0
$00CE	$A0D8	    			BTFSS	STATUS, C, 0
$00D0	$3C07	    			INCFSZ	STACK_7, W, 0
$00D2	$5E0B	    			SUBWF	STACK_11, F, 0
$00D4	$6AE8	    			CLRF	WREG, 0
$00D6	$A0D8	    			BTFSS	STATUS, C, 0
$00D8	$0E01	    			MOVLW	1
$00DA	$5E0E	    			SUBWF	STACK_14, F, 0
$00DC	$EF81	F000			GOTO	UOK22L8
$00E0	$	UADD22L8:
$00E0	$2608	    			ADDWF	STACK_8, F, 0
$00E2	$5005	    			MOVF	STACK_5, W, 0
$00E4	$B0D8	    			BTFSC	STATUS, C, 0
$00E6	$3C05	    			INCFSZ	STACK_5, W, 0
$00E8	$2609	    			ADDWF	STACK_9, F, 0
$00EA	$5006	    			MOVF	STACK_6, W, 0
$00EC	$B0D8	    			BTFSC	STATUS, C, 0
$00EE	$3C06	    			INCFSZ	STACK_6, W, 0
$00F0	$260A	    			ADDWF	STACK_10, F, 0
$00F2	$5007	    			MOVF	STACK_7, W, 0
$00F4	$B0D8	    			BTFSC	STATUS, C, 0
$00F6	$3C07	    			INCFSZ	STACK_7, W, 0
$00F8	$260B	    			ADDWF	STACK_11, F, 0
$00FA	$6AE8	    			CLRF	WREG, 0
$00FC	$B0D8	    			BTFSC	STATUS, C, 0
$00FE	$0E01	    			MOVLW	1
$0100	$260E	    			ADDWF	STACK_14, F, 0
$0102	$	UOK22L8:
$0102	$3602	    			RLCF	STACK_2, F, 0
$0104	$0E07	    			MOVLW	7
$0106	$6E0C	    			MOVWF	STACK_12, 0
$0108	$	LOOPU3232B:
$0108	$3402	    			RLCF	STACK_2, W, 0
$010A	$3608	    			RLCF	STACK_8, F, 0
$010C	$3609	    			RLCF	STACK_9, F, 0
$010E	$360A	    			RLCF	STACK_10, F, 0
$0110	$360B	    			RLCF	STACK_11, F, 0
$0112	$360E	    			RLCF	STACK_14, F, 0
$0114	$5004	    			MOVF	STACK_4, W, 0
$0116	$A002	    			BTFSS	STACK_2, 0, 0
$0118	$EFA1	F000			GOTO	UADD22LB
$011C	$5E08	    			SUBWF	STACK_8, F, 0
$011E	$5005	    			MOVF	STACK_5, W, 0
$0120	$A0D8	    			BTFSS	STATUS, C, 0
$0122	$3C05	    			INCFSZ	STACK_5, W, 0
$0124	$5E09	    			SUBWF	STACK_9, F, 0
$0126	$5006	    			MOVF	STACK_6, W, 0
$0128	$A0D8	    			BTFSS	STATUS, C, 0
$012A	$3C06	    			INCFSZ	STACK_6, W, 0
$012C	$5E0A	    			SUBWF	STACK_10, F, 0
$012E	$5007	    			MOVF	STACK_7, W, 0
$0130	$A0D8	    			BTFSS	STATUS, C, 0
$0132	$3C07	    			INCFSZ	STACK_7, W, 0
$0134	$5E0B	    			SUBWF	STACK_11, F, 0
$0136	$6AE8	    			CLRF	WREG, 0
$0138	$A0D8	    			BTFSS	STATUS, C, 0
$013A	$0E01	    			MOVLW	1
$013C	$5E0E	    			SUBWF	STACK_14, F, 0
$013E	$EFB2	F000			GOTO	UOK22LB
$0142	$	UADD22LB:
$0142	$2608	    			ADDWF	STACK_8, F, 0
$0144	$5005	    			MOVF	STACK_5, W, 0
$0146	$B0D8	    			BTFSC	STATUS, C, 0
$0148	$3C05	    			INCFSZ	STACK_5, W, 0
$014A	$2609	    			ADDWF	STACK_9, F, 0
$014C	$5006	    			MOVF	STACK_6, W, 0
$014E	$B0D8	    			BTFSC	STATUS, C, 0
$0150	$3C06	    			INCFSZ	STACK_6, W, 0
$0152	$260A	    			ADDWF	STACK_10, F, 0
$0154	$5007	    			MOVF	STACK_7, W, 0
$0156	$B0D8	    			BTFSC	STATUS, C, 0
$0158	$3C07	    			INCFSZ	STACK_7, W, 0
$015A	$260B	    			ADDWF	STACK_11, F, 0
$015C	$6AE8	    			CLRF	WREG, 0
$015E	$B0D8	    			BTFSC	STATUS, C, 0
$0160	$0E01	    			MOVLW	1
$0162	$260E	    			ADDWF	STACK_14, F, 0
$0164	$	UOK22LB:
$0164	$3602	    			RLCF	STACK_2, F, 0
$0166	$2E0C	    			DECFSZ	STACK_12, F, 0
$0168	$EF84	F000			GOTO	LOOPU3232B
$016C	$3401	    			RLCF	STACK_1, W, 0
$016E	$3608	    			RLCF	STACK_8, F, 0
$0170	$3609	    			RLCF	STACK_9, F, 0
$0172	$360A	    			RLCF	STACK_10, F, 0
$0174	$360B	    			RLCF	STACK_11, F, 0
$0176	$360E	    			RLCF	STACK_14, F, 0
$0178	$5004	    			MOVF	STACK_4, W, 0
$017A	$A002	    			BTFSS	STACK_2, 0, 0
$017C	$EFD3	F000			GOTO	UADD22L16
$0180	$5E08	    			SUBWF	STACK_8, F, 0
$0182	$5005	    			MOVF	STACK_5, W, 0
$0184	$A0D8	    			BTFSS	STATUS, C, 0
$0186	$3C05	    			INCFSZ	STACK_5, W, 0
$0188	$5E09	    			SUBWF	STACK_9, F, 0
$018A	$5006	    			MOVF	STACK_6, W, 0
$018C	$A0D8	    			BTFSS	STATUS, C, 0
$018E	$3C06	    			INCFSZ	STACK_6, W, 0
$0190	$5E0A	    			SUBWF	STACK_10, F, 0
$0192	$5007	    			MOVF	STACK_7, W, 0
$0194	$A0D8	    			BTFSS	STATUS, C, 0
$0196	$3C07	    			INCFSZ	STACK_7, W, 0
$0198	$5E0B	    			SUBWF	STACK_11, F, 0
$019A	$6AE8	    			CLRF	WREG, 0
$019C	$A0D8	    			BTFSS	STATUS, C, 0
$019E	$0E01	    			MOVLW	1
$01A0	$5E0E	    			SUBWF	STACK_14, F, 0
$01A2	$EFE4	F000			GOTO	UOK22L16
$01A6	$	UADD22L16:
$01A6	$2608	    			ADDWF	STACK_8, F, 0
$01A8	$5005	    			MOVF	STACK_5, W, 0
$01AA	$B0D8	    			BTFSC	STATUS, C, 0
$01AC	$3C05	    			INCFSZ	STACK_5, W, 0
$01AE	$2609	    			ADDWF	STACK_9, F, 0
$01B0	$5006	    			MOVF	STACK_6, W, 0
$01B2	$B0D8	    			BTFSC	STATUS, C, 0
$01B4	$3C06	    			INCFSZ	STACK_6, W, 0
$01B6	$260A	    			ADDWF	STACK_10, F, 0
$01B8	$5007	    			MOVF	STACK_7, W, 0
$01BA	$B0D8	    			BTFSC	STATUS, C, 0
$01BC	$3C07	    			INCFSZ	STACK_7, W, 0
$01BE	$260B	    			ADDWF	STACK_11, F, 0
$01C0	$6AE8	    			CLRF	WREG, 0
$01C2	$B0D8	    			BTFSC	STATUS, C, 0
$01C4	$0E01	    			MOVLW	1
$01C6	$260E	    			ADDWF	STACK_14, F, 0
$01C8	$	UOK22L16:
$01C8	$3601	    			RLCF	STACK_1, F, 0
$01CA	$0E07	    			MOVLW	7
$01CC	$6E0C	    			MOVWF	STACK_12, 0
$01CE	$	LOOPU3232C:
$01CE	$3401	    			RLCF	STACK_1, W, 0
$01D0	$3608	    			RLCF	STACK_8, F, 0
$01D2	$3609	    			RLCF	STACK_9, F, 0
$01D4	$360A	    			RLCF	STACK_10, F, 0
$01D6	$360B	    			RLCF	STACK_11, F, 0
$01D8	$360E	    			RLCF	STACK_14, F, 0
$01DA	$5004	    			MOVF	STACK_4, W, 0
$01DC	$A001	    			BTFSS	STACK_1, 0, 0
$01DE	$EF04	F001			GOTO	UADD22LC
$01E2	$5E08	    			SUBWF	STACK_8, F, 0
$01E4	$5005	    			MOVF	STACK_5, W, 0
$01E6	$A0D8	    			BTFSS	STATUS, C, 0
$01E8	$3C05	    			INCFSZ	STACK_5, W, 0
$01EA	$5E09	    			SUBWF	STACK_9, F, 0
$01EC	$5006	    			MOVF	STACK_6, W, 0
$01EE	$A0D8	    			BTFSS	STATUS, C, 0
$01F0	$3C06	    			INCFSZ	STACK_6, W, 0
$01F2	$5E0A	    			SUBWF	STACK_10, F, 0
$01F4	$5007	    			MOVF	STACK_7, W, 0
$01F6	$A0D8	    			BTFSS	STATUS, C, 0
$01F8	$3C07	    			INCFSZ	STACK_7, W, 0
$01FA	$5E0B	    			SUBWF	STACK_11, F, 0
$01FC	$6AE8	    			CLRF	WREG, 0
$01FE	$A0D8	    			BTFSS	STATUS, C, 0
$0200	$0E01	    			MOVLW	1
$0202	$5E0E	    			SUBWF	STACK_14, F, 0
$0204	$EF15	F001			GOTO	UOK22LC
$0208	$	UADD22LC:
$0208	$2608	    			ADDWF	STACK_8, F, 0
$020A	$5005	    			MOVF	STACK_5, W, 0
$020C	$B0D8	    			BTFSC	STATUS, C, 0
$020E	$3C05	    			INCFSZ	STACK_5, W, 0
$0210	$2609	    			ADDWF	STACK_9, F, 0
$0212	$5006	    			MOVF	STACK_6, W, 0
$0214	$B0D8	    			BTFSC	STATUS, C, 0
$0216	$3C06	    			INCFSZ	STACK_6, W, 0
$0218	$260A	    			ADDWF	STACK_10, F, 0
$021A	$5007	    			MOVF	STACK_7, W, 0
$021C	$B0D8	    			BTFSC	STATUS, C, 0
$021E	$3C07	    			INCFSZ	STACK_7, W, 0
$0220	$260B	    			ADDWF	STACK_11, F, 0
$0222	$6AE8	    			CLRF	WREG, 0
$0224	$B0D8	    			BTFSC	STATUS, C, 0
$0226	$0E01	    			MOVLW	1
$0228	$260E	    			ADDWF	STACK_14, F, 0
$022A	$	UOK22LC:
$022A	$3601	    			RLCF	STACK_1, F, 0
$022C	$2E0C	    			DECFSZ	STACK_12, F, 0
$022E	$EFE7	F000			GOTO	LOOPU3232C
$0232	$3400	    			RLCF	STACK_0, W, 0
$0234	$3608	    			RLCF	STACK_8, F, 0
$0236	$3609	    			RLCF	STACK_9, F, 0
$0238	$360A	    			RLCF	STACK_10, F, 0
$023A	$360B	    			RLCF	STACK_11, F, 0
$023C	$360E	    			RLCF	STACK_14, F, 0
$023E	$5004	    			MOVF	STACK_4, W, 0
$0240	$A001	    			BTFSS	STACK_1, 0, 0
$0242	$EF36	F001			GOTO	UADD22L24
$0246	$5E08	    			SUBWF	STACK_8, F, 0
$0248	$5005	    			MOVF	STACK_5, W, 0
$024A	$A0D8	    			BTFSS	STATUS, C, 0
$024C	$3C05	    			INCFSZ	STACK_5, W, 0
$024E	$5E09	    			SUBWF	STACK_9, F, 0
$0250	$5006	    			MOVF	STACK_6, W, 0
$0252	$A0D8	    			BTFSS	STATUS, C, 0
$0254	$3C06	    			INCFSZ	STACK_6, W, 0
$0256	$5E0A	    			SUBWF	STACK_10, F, 0
$0258	$5007	    			MOVF	STACK_7, W, 0
$025A	$A0D8	    			BTFSS	STATUS, C, 0
$025C	$3C07	    			INCFSZ	STACK_7, W, 0
$025E	$5E0B	    			SUBWF	STACK_11, F, 0
$0260	$6AE8	    			CLRF	WREG, 0
$0262	$A0D8	    			BTFSS	STATUS, C, 0
$0264	$0E01	    			MOVLW	1
$0266	$5E0E	    			SUBWF	STACK_14, F, 0
$0268	$EF47	F001			GOTO	UOK22L24
$026C	$	UADD22L24:
$026C	$2608	    			ADDWF	STACK_8, F, 0
$026E	$5005	    			MOVF	STACK_5, W, 0
$0270	$B0D8	    			BTFSC	STATUS, C, 0
$0272	$3C05	    			INCFSZ	STACK_5, W, 0
$0274	$2609	    			ADDWF	STACK_9, F, 0
$0276	$5006	    			MOVF	STACK_6, W, 0
$0278	$B0D8	    			BTFSC	STATUS, C, 0
$027A	$3C06	    			INCFSZ	STACK_6, W, 0
$027C	$260A	    			ADDWF	STACK_10, F, 0
$027E	$5007	    			MOVF	STACK_7, W, 0
$0280	$B0D8	    			BTFSC	STATUS, C, 0
$0282	$3C07	    			INCFSZ	STACK_7, W, 0
$0284	$260B	    			ADDWF	STACK_11, F, 0
$0286	$6AE8	    			CLRF	WREG, 0
$0288	$B0D8	    			BTFSC	STATUS, C, 0
$028A	$0E01	    			MOVLW	1
$028C	$260E	    			ADDWF	STACK_14, F, 0
$028E	$	UOK22L24:
$028E	$3600	    			RLCF	STACK_0, F, 0
$0290	$0E07	    			MOVLW	7
$0292	$6E0C	    			MOVWF	STACK_12, 0
$0294	$	LOOPU3232D:
$0294	$3400	    			RLCF	STACK_0, W, 0
$0296	$3608	    			RLCF	STACK_8, F, 0
$0298	$3609	    			RLCF	STACK_9, F, 0
$029A	$360A	    			RLCF	STACK_10, F, 0
$029C	$360B	    			RLCF	STACK_11, F, 0
$029E	$360E	    			RLCF	STACK_14, F, 0
$02A0	$5004	    			MOVF	STACK_4, W, 0
$02A2	$A000	    			BTFSS	STACK_0, 0, 0
$02A4	$EF67	F001			GOTO	UADD22LD
$02A8	$5E08	    			SUBWF	STACK_8, F, 0
$02AA	$5005	    			MOVF	STACK_5, W, 0
$02AC	$A0D8	    			BTFSS	STATUS, C, 0
$02AE	$3C05	    			INCFSZ	STACK_5, W, 0
$02B0	$5E09	    			SUBWF	STACK_9, F, 0
$02B2	$5006	    			MOVF	STACK_6, W, 0
$02B4	$A0D8	    			BTFSS	STATUS, C, 0
$02B6	$3C06	    			INCFSZ	STACK_6, W, 0
$02B8	$5E0A	    			SUBWF	STACK_10, F, 0
$02BA	$5007	    			MOVF	STACK_7, W, 0
$02BC	$A0D8	    			BTFSS	STATUS, C, 0
$02BE	$3C07	    			INCFSZ	STACK_7, W, 0
$02C0	$5E0B	    			SUBWF	STACK_11, F, 0
$02C2	$6AE8	    			CLRF	WREG, 0
$02C4	$A0D8	    			BTFSS	STATUS, C, 0
$02C6	$0E01	    			MOVLW	1
$02C8	$5E0E	    			SUBWF	STACK_14, F, 0
$02CA	$EF78	F001			GOTO	UOK22LD
$02CE	$	UADD22LD:
$02CE	$2608	    			ADDWF	STACK_8, F, 0
$02D0	$5005	    			MOVF	STACK_5, W, 0
$02D2	$B0D8	    			BTFSC	STATUS, C, 0
$02D4	$3C05	    			INCFSZ	STACK_5, W, 0
$02D6	$2609	    			ADDWF	STACK_9, F, 0
$02D8	$5006	    			MOVF	STACK_6, W, 0
$02DA	$B0D8	    			BTFSC	STATUS, C, 0
$02DC	$3C06	    			INCFSZ	STACK_6, W, 0
$02DE	$260A	    			ADDWF	STACK_10, F, 0
$02E0	$5007	    			MOVF	STACK_7, W, 0
$02E2	$B0D8	    			BTFSC	STATUS, C, 0
$02E4	$3C07	    			INCFSZ	STACK_7, W, 0
$02E6	$260B	    			ADDWF	STACK_11, F, 0
$02E8	$6AE8	    			CLRF	WREG, 0
$02EA	$B0D8	    			BTFSC	STATUS, C, 0
$02EC	$0E01	    			MOVLW	1
$02EE	$260E	    			ADDWF	STACK_14, F, 0
$02F0	$	UOK22LD:
$02F0	$3600	    			RLCF	STACK_0, F, 0
$02F2	$2E0C	    			DECFSZ	STACK_12, F, 0
$02F4	$EF4A	F001			GOTO	LOOPU3232D
$02F8	$B000	    			BTFSC	STACK_0, 0, 0
$02FA	$EF8D	F001			GOTO	UOK22L
$02FE	$5004	    			MOVF	STACK_4, W, 0
$0300	$2608	    			ADDWF	STACK_8, F, 0
$0302	$5005	    			MOVF	STACK_5, W, 0
$0304	$B0D8	    			BTFSC	STATUS, C, 0
$0306	$3C05	    			INCFSZ	STACK_5, W, 0
$0308	$2609	    			ADDWF	STACK_9, F, 0
$030A	$5006	    			MOVF	STACK_6, W, 0
$030C	$B0D8	    			BTFSC	STATUS, C, 0
$030E	$3C06	    			INCFSZ	STACK_6, W, 0
$0310	$260A	    			ADDWF	STACK_10, F, 0
$0312	$5007	    			MOVF	STACK_7, W, 0
$0314	$B0D8	    			BTFSC	STATUS, C, 0
$0316	$3C07	    			INCFSZ	STACK_7, W, 0
$0318	$260B	    			ADDWF	STACK_11, F, 0
$031A	$	UOK22L:
$031A	$0012	    			RETURN
$092C	$	_Lcd_Init:
$092C	$C060	F015			MOVFF	FARG_Lcd_Init+0, Lcd_main_global_portaddress
$0930	$C061	F016			MOVFF	FARG_Lcd_Init+1, Lcd_main_global_portaddress+1
$0934	$C015	FFE1			MOVFF	lcd_main_global_portaddress+0, FSR1L
$0938	$C016	FFE2			MOVFF	lcd_main_global_portaddress+1, FSR1H
$093C	$0E12	    			MOVLW	18
$093E	$26E1	    			ADDWF	FSR1L, F, 0
$0940	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0942	$94E7	    			BCF	INDF1, ___RS, 0
$0944	$90E7	    			BCF	INDF1, ___RW, 0
$0946	$9EE7	    			BCF	INDF1, ___DB7, 0
$0948	$9CE7	    			BCF	INDF1, ___DB6, 0
$094A	$9AE7	    			BCF	INDF1, ___DB5, 0
$094C	$98E7	    			BCF	INDF1, ___DB4, 0
$094E	$0E12	    			MOVLW	18
$0950	$5EE1	    			SUBWF	FSR1L, F, 0
$0952	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0954	$94E7	    			BCF	INDF1, ___RS, 0
$0956	$90E7	    			BCF	INDF1, ___RW, 0
$0958	$9EE7	    			BCF	INDF1, ___DB7, 0
$095A	$9CE7	    			BCF	INDF1, ___DB6, 0
$095C	$9AE7	    			BCF	INDF1, ___DB5, 0
$095E	$98E7	    			BCF	INDF1, ___DB4, 0
$0960	$ECBF	F005			CALL	_Delay_5500us
$0964	$8AE7	    			BSF	INDF1, ___DB5, 0
$0966	$88E7	    			BSF	INDF1, ___DB4, 0
$0968	$86E7	    			BSF	INDF1, ___ENABLE, 0
$096A	$ECEA	F005			CALL	_Delay_1us
$096E	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0970	$ECBF	F005			CALL	_Delay_5500us
$0974	$8AE7	    			BSF	INDF1, ___DB5, 0
$0976	$88E7	    			BSF	INDF1, ___DB4, 0
$0978	$86E7	    			BSF	INDF1, ___ENABLE, 0
$097A	$ECEA	F005			CALL	_Delay_1us
$097E	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0980	$ECF6	F005			CALL	_Delay_50us
$0984	$ECF6	F005			CALL	_Delay_50us
$0988	$8AE7	    			BSF	INDF1, ___DB5, 0
$098A	$88E7	    			BSF	INDF1, ___DB4, 0
$098C	$86E7	    			BSF	INDF1, ___ENABLE, 0
$098E	$ECEA	F005			CALL	_Delay_1us
$0992	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0994	$ECBF	F005			CALL	_Delay_5500us
$0998	$8AE7	    			BSF	INDF1, ___DB5, 0
$099A	$98E7	    			BCF	INDF1, ___DB4, 0
$099C	$86E7	    			BSF	INDF1, ___ENABLE, 0
$099E	$ECEA	F005			CALL	_Delay_1us
$09A2	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09A4	$ECF6	F005			CALL	_Delay_50us
$09A8	$8AE7	    			BSF	INDF1, ___DB5, 0
$09AA	$98E7	    			BCF	INDF1, ___DB4, 0
$09AC	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09AE	$ECEA	F005			CALL	_Delay_1us
$09B2	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09B4	$8EE7	    			BSF	INDF1, ___DB7, 0
$09B6	$9CE7	    			BCF	INDF1, ___DB6, 0
$09B8	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09BA	$ECEA	F005			CALL	_Delay_1us
$09BE	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09C0	$ECF6	F005			CALL	_Delay_50us
$09C4	$0E00	    			MOVLW	0
$09C6	$6EE7	    			MOVWF	INDF1, 0
$09C8	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09CA	$ECEA	F005			CALL	_Delay_1us
$09CE	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09D0	$8EE7	    			BSF	INDF1, ___DB7, 0
$09D2	$8CE7	    			BSF	INDF1, ___DB6, 0
$09D4	$8AE7	    			BSF	INDF1, ___DB5, 0
$09D6	$88E7	    			BSF	INDF1, ___DB4, 0
$09D8	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09DA	$ECEA	F005			CALL	_Delay_1us
$09DE	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09E0	$ECF6	F005			CALL	_Delay_50us
$09E4	$0E00	    			MOVLW	0
$09E6	$6EE7	    			MOVWF	INDF1, 0
$09E8	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09EA	$ECEA	F005			CALL	_Delay_1us
$09EE	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09F0	$88E7	    			BSF	INDF1, ___DB4, 0
$09F2	$86E7	    			BSF	INDF1, ___ENABLE, 0
$09F4	$ECEA	F005			CALL	_Delay_1us
$09F8	$96E7	    			BCF	INDF1, ___ENABLE, 0
$09FA	$ECBF	F005			CALL	_Delay_5500us
$09FE	$0E00	    			MOVLW	0
$0A00	$6EE7	    			MOVWF	INDF1, 0
$0A02	$86E7	    			BSF	INDF1, ___ENABLE, 0
$0A04	$ECEA	F005			CALL	_Delay_1us
$0A08	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0A0A	$8CE7	    			BSF	INDF1, ___DB6, 0
$0A0C	$8AE7	    			BSF	INDF1, ___DB5, 0
$0A0E	$86E7	    			BSF	INDF1, ___ENABLE, 0
$0A10	$ECEA	F005			CALL	_Delay_1us
$0A14	$96E7	    			BCF	INDF1, ___ENABLE, 0
$0A16	$ECF6	F005			CALL	_Delay_50us
$0A1A	$0E01	    			MOVLW	1
$0A1C	$6E17	    			MOVWF	Lcd_cmd_status, 0
$0A1E	$0012	    			RETURN
$0AB4	$	_Lcd_Out:
$0AB4	$D00F	    			BRA	L_Lcd_Out_17
$0AB6	$	L_Lcd_Out_19:
$0AB6	$0E80	    			MOVLW	128
$0AB8	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0ABA	$D019	    			BRA	L_Lcd_Out_18
$0ABC	$	L_Lcd_Out_20:
$0ABC	$0EC0	    			MOVLW	192
$0ABE	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0AC0	$D016	    			BRA	L_Lcd_Out_18
$0AC2	$	L_Lcd_Out_21:
$0AC2	$0E94	    			MOVLW	148
$0AC4	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0AC6	$D013	    			BRA	L_Lcd_Out_18
$0AC8	$	L_Lcd_Out_22:
$0AC8	$0ED4	    			MOVLW	212
$0ACA	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0ACC	$D010	    			BRA	L_Lcd_Out_18
$0ACE	$	L_Lcd_Out_23:
$0ACE	$0E80	    			MOVLW	128
$0AD0	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0AD2	$D00D	    			BRA	L_Lcd_Out_18
$0AD4	$	L_Lcd_Out_17:
$0AD4	$5060	    			MOVF	FARG_Lcd_Out+0, 0, 0
$0AD6	$0A01	    			XORLW	1
$0AD8	$E0EE	    			BZ	L_Lcd_Out_19
$0ADA	$5060	    			MOVF	FARG_Lcd_Out+0, 0, 0
$0ADC	$0A02	    			XORLW	2
$0ADE	$E0EE	    			BZ	L_Lcd_Out_20
$0AE0	$5060	    			MOVF	FARG_Lcd_Out+0, 0, 0
$0AE2	$0A03	    			XORLW	3
$0AE4	$E0EE	    			BZ	L_Lcd_Out_21
$0AE6	$5060	    			MOVF	FARG_Lcd_Out+0, 0, 0
$0AE8	$0A04	    			XORLW	4
$0AEA	$E0EE	    			BZ	L_Lcd_Out_22
$0AEC	$D7F0	    			BRA	L_Lcd_Out_23
$0AEE	$	L_Lcd_Out_18:
$0AEE	$0461	    			DECF	FARG_Lcd_Out+1, 0, 0
$0AF0	$6E00	    			MOVWF	STACK_0, 0
$0AF2	$5060	    			MOVF	FARG_Lcd_Out+0, 0, 0
$0AF4	$2600	    			ADDWF	STACK_0, 1, 0
$0AF6	$C000	F060			MOVFF	STACK_0, FARG_Lcd_Out+0
$0AFA	$C000	F067			MOVFF	STACK_0, FARG_Lcd_Cmd+0
$0AFE	$EC10	F005			CALL	_Lcd_Cmd
$0B02	$6A17	    			CLRF	Lcd_cmd_status, 0
$0B04	$6A64	    			CLRF	Lcd_Out_i_L0, 0
$0B06	$6A65	    			CLRF	Lcd_Out_i_L0+1, 0
$0B08	$	L_Lcd_Out_24:
$0B08	$5064	    			MOVF	Lcd_Out_i_L0, 0, 0
$0B0A	$2462	    			ADDWF	FARG_Lcd_Out+2, 0, 0
$0B0C	$6EE9	    			MOVWF	FSR0L, 0
$0B0E	$5065	    			MOVF	Lcd_Out_i_L0+1, 0, 0
$0B10	$2063	    			ADDWFC	FARG_Lcd_Out+3, 0, 0
$0B12	$6EEA	    			MOVWF	FSR0L+1, 0
$0B14	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$0B18	$5200	    			MOVF	STACK_0, 1, 0
$0B1A	$E00D	    			BZ	L_Lcd_Out_25
$0B1C	$5064	    			MOVF	Lcd_Out_i_L0, 0, 0
$0B1E	$2462	    			ADDWF	FARG_Lcd_Out+2, 0, 0
$0B20	$6EE9	    			MOVWF	FSR0L, 0
$0B22	$5065	    			MOVF	Lcd_Out_i_L0+1, 0, 0
$0B24	$2063	    			ADDWFC	FARG_Lcd_Out+3, 0, 0
$0B26	$6EEA	    			MOVWF	FSR0L+1, 0
$0B28	$CFEE	F067			MOVFF	POSTINC0, FARG_Lcd_Cmd+0
$0B2C	$EC10	F005			CALL	_Lcd_Cmd
$0B30	$4A64	    			INFSNZ	Lcd_Out_i_L0, 1, 0
$0B32	$2A65	    			INCF	Lcd_Out_i_L0+1, 1, 0
$0B34	$D7E9	    			BRA	L_Lcd_Out_24
$0B36	$	L_Lcd_Out_25:
$0B36	$0E01	    			MOVLW	1
$0B38	$6E17	    			MOVWF	Lcd_cmd_status, 0
$0B3A	$0012	    			RETURN
$0B3C	$	_Delay_1sec:
;Delays.c,48 :: 			void Delay_1sec() {
;Delays.c,49 :: 			Delay_ms(1000);
$0B3C	$0E1A	    			MOVLW	26
$0B3E	$6E0C	    			MOVWF	STACK_12, 0
$0B40	$0EFF	    			MOVLW	255
$0B42	$6E0B	    			MOVWF	STACK_11, 0
$0B44	$0EFF	    			MOVLW	255
$0B46	$6E0A	    			MOVWF	STACK_10, 0
$0B48	$2E0C	    			DECFSZ	STACK_12, F, 0
$0B4A	$D001	    			BRA	$+2
$0B4C	$D007	    			BRA	$+8
$0B4E	$2E0B	    			DECFSZ	STACK_11, F, 0
$0B50	$D001	    			BRA	$+2
$0B52	$D003	    			BRA	$+4
$0B54	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B56	$D7FE	    			BRA	$-1
$0B58	$D7FA	    			BRA	$-5
$0B5A	$D7F6	    			BRA	$-9
$0B5C	$0E7F	    			MOVLW	127
$0B5E	$6E0B	    			MOVWF	STACK_11, 0
$0B60	$0EFF	    			MOVLW	255
$0B62	$6E0A	    			MOVWF	STACK_10, 0
$0B64	$2E0B	    			DECFSZ	STACK_11, F, 0
$0B66	$D001	    			BRA	$+2
$0B68	$D003	    			BRA	$+4
$0B6A	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B6C	$D7FE	    			BRA	$-1
$0B6E	$D7FA	    			BRA	$-5
$0B70	$0E58	    			MOVLW	88
$0B72	$6E0A	    			MOVWF	STACK_10, 0
$0B74	$2E0A	    			DECFSZ	STACK_10, F, 0
$0B76	$D7FE	    			BRA	$-1
$0B78	$0000	    			NOP
$0B7A	$0000	    			NOP
;Delays.c,50 :: 			}
$0B7C	$0012	    			RETURN
$081C	$	_GPS:
;GPS_Robot.c,31 :: 			void GPS (void)
;GPS_Robot.c,34 :: 			if(Usart_Data_Ready() );  {  if ( Usart_Read() == '$'){
$081C	$ECF0	F005			CALL	_Usart_Data_Ready
$0820	$5200	    			MOVF	STACK_0, 1, 0
$0822	$E000	    			BZ	L_GPS_0
$0824	$	L_GPS_0:
$0824	$ECD9	F005			CALL	_Usart_Read
$0828	$5000	    			MOVF	STACK_0, 0, 0
$082A	$0A24	    			XORLW	36
$082C	$A4D8	    			BTFSS	STATUS, Z, 0
$082E	$D07D	    			BRA	L_GPS_1
;GPS_Robot.c,35 :: 			while(!Usart_Data_Ready() ); if ( Usart_Read() == 'G'){
$0830	$	L_GPS_2:
$0830	$ECF0	F005			CALL	_Usart_Data_Ready
$0834	$5200	    			MOVF	STACK_0, 1, 0
$0836	$E0FC	    			BZ	L_GPS_2
$0838	$	L_GPS_3:
$0838	$ECD9	F005			CALL	_Usart_Read
$083C	$5000	    			MOVF	STACK_0, 0, 0
$083E	$0A47	    			XORLW	71
$0840	$A4D8	    			BTFSS	STATUS, Z, 0
$0842	$D073	    			BRA	L_GPS_4
;GPS_Robot.c,36 :: 			while(!Usart_Data_Ready() ); if ( Usart_Read() == 'P'){
$0844	$	L_GPS_5:
$0844	$ECF0	F005			CALL	_Usart_Data_Ready
$0848	$5200	    			MOVF	STACK_0, 1, 0
$084A	$E0FC	    			BZ	L_GPS_5
$084C	$	L_GPS_6:
$084C	$ECD9	F005			CALL	_Usart_Read
$0850	$5000	    			MOVF	STACK_0, 0, 0
$0852	$0A50	    			XORLW	80
$0854	$A4D8	    			BTFSS	STATUS, Z, 0
$0856	$D069	    			BRA	L_GPS_7
;GPS_Robot.c,37 :: 			while(!Usart_Data_Ready() ); if ( Usart_Read() == 'R'){
$0858	$	L_GPS_8:
$0858	$ECF0	F005			CALL	_Usart_Data_Ready
$085C	$5200	    			MOVF	STACK_0, 1, 0
$085E	$E0FC	    			BZ	L_GPS_8
$0860	$	L_GPS_9:
$0860	$ECD9	F005			CALL	_Usart_Read
$0864	$5000	    			MOVF	STACK_0, 0, 0
$0866	$0A52	    			XORLW	82
$0868	$E160	    			BNZ	L_GPS_10
;GPS_Robot.c,38 :: 			while(!Usart_Data_Ready() ); if ( Usart_Read() == 'M'){
$086A	$	L_GPS_11:
$086A	$ECF0	F005			CALL	_Usart_Data_Ready
$086E	$5200	    			MOVF	STACK_0, 1, 0
$0870	$E0FC	    			BZ	L_GPS_11
$0872	$	L_GPS_12:
$0872	$ECD9	F005			CALL	_Usart_Read
$0876	$5000	    			MOVF	STACK_0, 0, 0
$0878	$0A4D	    			XORLW	77
$087A	$E157	    			BNZ	L_GPS_13
;GPS_Robot.c,39 :: 			while(!Usart_Data_Ready() ); if ( Usart_Read() == 'C'){
$087C	$	L_GPS_14:
$087C	$ECF0	F005			CALL	_Usart_Data_Ready
$0880	$5200	    			MOVF	STACK_0, 1, 0
$0882	$E0FC	    			BZ	L_GPS_14
$0884	$	L_GPS_15:
$0884	$ECD9	F005			CALL	_Usart_Read
$0888	$5000	    			MOVF	STACK_0, 0, 0
$088A	$0A43	    			XORLW	67
$088C	$E14E	    			BNZ	L_GPS_16
;GPS_Robot.c,42 :: 			for(loop=0; loop<=37; loop++)
$088E	$6A18	    			CLRF	_loop, 0
$0890	$	L_GPS_17:
$0890	$5018	    			MOVF	_loop, 0, 0
$0892	$0825	    			SUBLW	37
$0894	$E316	    			BNC	L_GPS_18
;GPS_Robot.c,44 :: 			while(!Usart_Data_Ready() );
$0896	$	L_GPS_20:
$0896	$ECF0	F005			CALL	_Usart_Data_Ready
$089A	$5200	    			MOVF	STACK_0, 1, 0
$089C	$E0FC	    			BZ	L_GPS_20
$089E	$	L_GPS_21:
;GPS_Robot.c,45 :: 			raw_data[loop] = Usart_Read();
$089E	$0E19	    			MOVLW	_raw_data
$08A0	$6E60	    			MOVWF	FLOC_GPS+0, 0
$08A2	$0E00	    			MOVLW	@_raw_data
$08A4	$6E61	    			MOVWF	FLOC_GPS+1, 0
$08A6	$5018	    			MOVF	_loop, 0, 0
$08A8	$2660	    			ADDWF	FLOC_GPS+0, 1, 0
$08AA	$B0D8	    			BTFSC	STATUS, C, 0
$08AC	$2A61	    			INCF	FLOC_GPS+1, 1, 0
$08AE	$ECD9	F005			CALL	_Usart_Read
$08B2	$C060	FFE1			MOVFF	FLOC_GPS+0, FSR1L
$08B6	$C061	FFE2			MOVFF	FLOC_GPS+1, FSR1H
$08BA	$C000	FFE6			MOVFF	STACK_0, POSTINC1
;GPS_Robot.c,46 :: 			}
$08BE	$	L_GPS_19:
;GPS_Robot.c,42 :: 			for(loop=0; loop<=37; loop++)
$08BE	$2A18	    			INCF	_loop, 1, 0
;GPS_Robot.c,46 :: 			}
$08C0	$D7E7	    			BRA	L_GPS_17
$08C2	$	L_GPS_18:
;GPS_Robot.c,47 :: 			Lcd_Cmd(LCD_CLEAR);
$08C2	$0E01	    			MOVLW	1
$08C4	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$08C6	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,49 :: 			Lcd_Cmd(LCD_FIRST_ROW);
$08CA	$0E80	    			MOVLW	128
$08CC	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$08CE	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,50 :: 			for(loop=14; loop<=24; loop++)
$08D2	$0E0E	    			MOVLW	14
$08D4	$6E18	    			MOVWF	_loop, 0
$08D6	$	L_GPS_22:
$08D6	$5018	    			MOVF	_loop, 0, 0
$08D8	$0818	    			SUBLW	24
$08DA	$E30E	    			BNC	L_GPS_23
;GPS_Robot.c,52 :: 			Lcd_Chr_Cp( raw_data[loop] );
$08DC	$0E19	    			MOVLW	_raw_data
$08DE	$6EE9	    			MOVWF	FSR0L, 0
$08E0	$0E00	    			MOVLW	@_raw_data
$08E2	$6EEA	    			MOVWF	FSR0L+1, 0
$08E4	$5018	    			MOVF	_loop, 0, 0
$08E6	$26E9	    			ADDWF	FSR0L, 1, 0
$08E8	$B0D8	    			BTFSC	STATUS, C, 0
$08EA	$2AEA	    			INCF	FSR0L+1, 1, 0
$08EC	$CFEE	F066			MOVFF	POSTINC0, FARG_Lcd_Chr_Cp+0
$08F0	$ECE2	F005			CALL	_Lcd_Chr_Cp
;GPS_Robot.c,53 :: 			}
$08F4	$	L_GPS_24:
;GPS_Robot.c,50 :: 			for(loop=14; loop<=24; loop++)
$08F4	$2A18	    			INCF	_loop, 1, 0
;GPS_Robot.c,53 :: 			}
$08F6	$D7EF	    			BRA	L_GPS_22
$08F8	$	L_GPS_23:
;GPS_Robot.c,55 :: 			Lcd_Cmd(LCD_SECOND_ROW);
$08F8	$0EC0	    			MOVLW	192
$08FA	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$08FC	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,56 :: 			for(loop=26; loop<=37; loop++)
$0900	$0E1A	    			MOVLW	26
$0902	$6E18	    			MOVWF	_loop, 0
$0904	$	L_GPS_25:
$0904	$5018	    			MOVF	_loop, 0, 0
$0906	$0825	    			SUBLW	37
$0908	$E30E	    			BNC	L_GPS_26
;GPS_Robot.c,58 :: 			Lcd_Chr_Cp( raw_data[loop] );
$090A	$0E19	    			MOVLW	_raw_data
$090C	$6EE9	    			MOVWF	FSR0L, 0
$090E	$0E00	    			MOVLW	@_raw_data
$0910	$6EEA	    			MOVWF	FSR0L+1, 0
$0912	$5018	    			MOVF	_loop, 0, 0
$0914	$26E9	    			ADDWF	FSR0L, 1, 0
$0916	$B0D8	    			BTFSC	STATUS, C, 0
$0918	$2AEA	    			INCF	FSR0L+1, 1, 0
$091A	$CFEE	F066			MOVFF	POSTINC0, FARG_Lcd_Chr_Cp+0
$091E	$ECE2	F005			CALL	_Lcd_Chr_Cp
;GPS_Robot.c,59 :: 			}
$0922	$	L_GPS_27:
;GPS_Robot.c,56 :: 			for(loop=26; loop<=37; loop++)
$0922	$2A18	    			INCF	_loop, 1, 0
;GPS_Robot.c,59 :: 			}
$0924	$D7EF	    			BRA	L_GPS_25
$0926	$	L_GPS_26:
;GPS_Robot.c,61 :: 			gps_status=1;                                   }}}}}}}
$0926	$0E01	    			MOVLW	1
$0928	$6E3E	    			MOVWF	_gps_status, 0
$092A	$	L_GPS_16:
$092A	$	L_GPS_13:
$092A	$	L_GPS_10:
$092A	$	L_GPS_7:
$092A	$	L_GPS_4:
$092A	$	L_GPS_1:
;GPS_Robot.c,62 :: 			}
$092A	$0012	    			RETURN
$031C	$	_extraction:
;GPS_Robot.c,64 :: 			void extraction(void)
;GPS_Robot.c,66 :: 			if(!PB1)
$031C	$B283	    			BTFSC	PORTD, 1, 0
$031E	$D174	    			BRA	L_extraction_28
;GPS_Robot.c,70 :: 			north = 0;
$0320	$6A3F	    			CLRF	_north, 0
$0322	$6A40	    			CLRF	_north+1, 0
$0324	$6A41	    			CLRF	_north+2, 0
$0326	$6A42	    			CLRF	_north+3, 0
;GPS_Robot.c,71 :: 			cons  = 10000000;
$0328	$0E80	    			MOVLW	128
$032A	$6E60	    			MOVWF	extraction_cons_L1, 0
$032C	$0E96	    			MOVLW	150
$032E	$6E61	    			MOVWF	extraction_cons_L1+1, 0
$0330	$0E98	    			MOVLW	152
$0332	$6E62	    			MOVWF	extraction_cons_L1+2, 0
$0334	$0E00	    			MOVLW	0
$0336	$6E63	    			MOVWF	extraction_cons_L1+3, 0
;GPS_Robot.c,72 :: 			for(loop=14; loop<=(24-2); loop++)
$0338	$0E0E	    			MOVLW	14
$033A	$6E18	    			MOVWF	_loop, 0
$033C	$	L_extraction_29:
$033C	$5018	    			MOVF	_loop, 0, 0
$033E	$0816	    			SUBLW	22
$0340	$A0D8	    			BTFSS	STATUS, C, 0
$0342	$D080	    			BRA	L_extraction_30
;GPS_Robot.c,74 :: 			if(raw_data[loop]!='.')
$0344	$0E19	    			MOVLW	_raw_data
$0346	$6EE9	    			MOVWF	FSR0L, 0
$0348	$0E00	    			MOVLW	@_raw_data
$034A	$6EEA	    			MOVWF	FSR0L+1, 0
$034C	$5018	    			MOVF	_loop, 0, 0
$034E	$26E9	    			ADDWF	FSR0L, 1, 0
$0350	$B0D8	    			BTFSC	STATUS, C, 0
$0352	$2AEA	    			INCF	FSR0L+1, 1, 0
$0354	$CFEE	F004			MOVFF	POSTINC0, STACK_4
$0358	$5004	    			MOVF	STACK_4, 0, 0
$035A	$0A2E	    			XORLW	46
$035C	$E057	    			BZ	L_extraction_32
;GPS_Robot.c,76 :: 			raw_data[loop] = raw_data[loop] & 0x0F; // Changing to binary
$035E	$0E19	    			MOVLW	_raw_data
$0360	$6E04	    			MOVWF	STACK_4, 0
$0362	$0E00	    			MOVLW	@_raw_data
$0364	$6E05	    			MOVWF	STACK_4+1, 0
$0366	$5018	    			MOVF	_loop, 0, 0
$0368	$2604	    			ADDWF	STACK_4, 1, 0
$036A	$B0D8	    			BTFSC	STATUS, C, 0
$036C	$2A05	    			INCF	STACK_4+1, 1, 0
$036E	$C004	FFE9			MOVFF	STACK_4, FSR0L
$0372	$C005	FFEA			MOVFF	STACK_4+1, FSR0H
$0376	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$037A	$0E0F	    			MOVLW	15
$037C	$1600	    			ANDWF	STACK_0, 1, 0
$037E	$C004	FFE1			MOVFF	STACK_4, FSR1L
$0382	$C005	FFE2			MOVFF	STACK_4+1, FSR1H
$0386	$C000	FFE6			MOVFF	STACK_0, POSTINC1
;GPS_Robot.c,77 :: 			raw_data[loop] = raw_data[loop] * cons; // Multiply with specific weight
$038A	$0E19	    			MOVLW	_raw_data
$038C	$6E64	    			MOVWF	FLOC_extraction+4, 0
$038E	$0E00	    			MOVLW	@_raw_data
$0390	$6E65	    			MOVWF	FLOC_extraction+5, 0
$0392	$5018	    			MOVF	_loop, 0, 0
$0394	$2664	    			ADDWF	FLOC_extraction+4, 1, 0
$0396	$B0D8	    			BTFSC	STATUS, C, 0
$0398	$2A65	    			INCF	FLOC_extraction+5, 1, 0
$039A	$C064	FFE9			MOVFF	FLOC_extraction+4, FSR0L
$039E	$C065	FFEA			MOVFF	FLOC_extraction+5, FSR0H
$03A2	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$03A6	$5000	    			MOVF	STACK_0, 0, 0
$03A8	$0260	    			MULWF	extraction_cons_L1, 0
$03AA	$CFF3	F000			MOVFF	PRODL, STACK_0
$03AE	$C064	FFE1			MOVFF	FLOC_extraction+4, FSR1L
$03B2	$C065	FFE2			MOVFF	FLOC_extraction+5, FSR1H
$03B6	$C000	FFE6			MOVFF	STACK_0, POSTINC1
;GPS_Robot.c,78 :: 			north = north + raw_data[loop];         // Storing North
$03BA	$0E19	    			MOVLW	_raw_data
$03BC	$6EE9	    			MOVWF	FSR0L, 0
$03BE	$0E00	    			MOVLW	@_raw_data
$03C0	$6EEA	    			MOVWF	FSR0L+1, 0
$03C2	$5018	    			MOVF	_loop, 0, 0
$03C4	$26E9	    			ADDWF	FSR0L, 1, 0
$03C6	$B0D8	    			BTFSC	STATUS, C, 0
$03C8	$2AEA	    			INCF	FSR0L+1, 1, 0
$03CA	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$03CE	$5000	    			MOVF	STACK_0, 0, 0
$03D0	$263F	    			ADDWF	_north, 1, 0
$03D2	$0E00	    			MOVLW	0
$03D4	$2240	    			ADDWFC	_north+1, 1, 0
$03D6	$2241	    			ADDWFC	_north+2, 1, 0
$03D8	$2242	    			ADDWFC	_north+3, 1, 0
;GPS_Robot.c,79 :: 			cons /= 10;                             // Decreasing weight
$03DA	$0E0A	    			MOVLW	10
$03DC	$6E04	    			MOVWF	STACK_4, 0
$03DE	$0E00	    			MOVLW	0
$03E0	$6E05	    			MOVWF	STACK_4+1, 0
$03E2	$6E06	    			MOVWF	STACK_4+2, 0
$03E4	$6E07	    			MOVWF	STACK_4+3, 0
$03E6	$C060	F000			MOVFF	extraction_cons_L1, STACK_0
$03EA	$C061	F001			MOVFF	extraction_cons_L1+1, STACK_0+1
$03EE	$C062	F002			MOVFF	extraction_cons_L1+2, STACK_0+2
$03F2	$C063	F003			MOVFF	extraction_cons_L1+3, STACK_0+3
$03F6	$EC04	F000			CALL	_div_32x32_u
$03FA	$C000	F060			MOVFF	STACK_0, extraction_cons_L1
$03FE	$C001	F061			MOVFF	STACK_0+1, extraction_cons_L1+1
$0402	$C002	F062			MOVFF	STACK_0+2, extraction_cons_L1+2
$0406	$C003	F063			MOVFF	STACK_0+3, extraction_cons_L1+3
;GPS_Robot.c,80 :: 			}
$040A	$D019	    			BRA	L_extraction_33
$040C	$	L_extraction_32:
;GPS_Robot.c,82 :: 			cons /= 10;
$040C	$0100	    			MOVLB	0
$040E	$0E0A	    			MOVLW	10
$0410	$6E04	    			MOVWF	STACK_4, 0
$0412	$0E00	    			MOVLW	0
$0414	$6E05	    			MOVWF	STACK_4+1, 0
$0416	$6E06	    			MOVWF	STACK_4+2, 0
$0418	$6E07	    			MOVWF	STACK_4+3, 0
$041A	$C060	F000			MOVFF	extraction_cons_L1, STACK_0
$041E	$C061	F001			MOVFF	extraction_cons_L1+1, STACK_0+1
$0422	$C062	F002			MOVFF	extraction_cons_L1+2, STACK_0+2
$0426	$C063	F003			MOVFF	extraction_cons_L1+3, STACK_0+3
$042A	$EC04	F000			CALL	_div_32x32_u
$042E	$C000	F060			MOVFF	STACK_0, extraction_cons_L1
$0432	$C001	F061			MOVFF	STACK_0+1, extraction_cons_L1+1
$0436	$C002	F062			MOVFF	STACK_0+2, extraction_cons_L1+2
$043A	$C003	F063			MOVFF	STACK_0+3, extraction_cons_L1+3
$043E	$	L_extraction_33:
;GPS_Robot.c,83 :: 			}
$043E	$	L_extraction_31:
;GPS_Robot.c,72 :: 			for(loop=14; loop<=(24-2); loop++)
$043E	$0100	    			MOVLB	0
$0440	$2A18	    			INCF	_loop, 1, 0
;GPS_Robot.c,83 :: 			}
$0442	$D77C	    			BRA	L_extraction_29
$0444	$	L_extraction_30:
;GPS_Robot.c,85 :: 			east = 0;
$0444	$0100	    			MOVLB	0
$0446	$6A43	    			CLRF	_east, 0
$0448	$6A44	    			CLRF	_east+1, 0
$044A	$6A45	    			CLRF	_east+2, 0
$044C	$6A46	    			CLRF	_east+3, 0
;GPS_Robot.c,86 :: 			cons  = 100000000;
$044E	$0E00	    			MOVLW	0
$0450	$6E60	    			MOVWF	extraction_cons_L1, 0
$0452	$0EE1	    			MOVLW	225
$0454	$6E61	    			MOVWF	extraction_cons_L1+1, 0
$0456	$0EF5	    			MOVLW	245
$0458	$6E62	    			MOVWF	extraction_cons_L1+2, 0
$045A	$0E05	    			MOVLW	5
$045C	$6E63	    			MOVWF	extraction_cons_L1+3, 0
;GPS_Robot.c,87 :: 			for(loop=26; loop<=(37-2); loop++)
$045E	$0E1A	    			MOVLW	26
$0460	$6E18	    			MOVWF	_loop, 0
$0462	$	L_extraction_34:
$0462	$0100	    			MOVLB	0
$0464	$5018	    			MOVF	_loop, 0, 0
$0466	$0823	    			SUBLW	35
$0468	$A0D8	    			BTFSS	STATUS, C, 0
$046A	$D080	    			BRA	L_extraction_35
;GPS_Robot.c,89 :: 			if(raw_data[loop]!='.')
$046C	$0E19	    			MOVLW	_raw_data
$046E	$6EE9	    			MOVWF	FSR0L, 0
$0470	$0E00	    			MOVLW	@_raw_data
$0472	$6EEA	    			MOVWF	FSR0L+1, 0
$0474	$5018	    			MOVF	_loop, 0, 0
$0476	$26E9	    			ADDWF	FSR0L, 1, 0
$0478	$B0D8	    			BTFSC	STATUS, C, 0
$047A	$2AEA	    			INCF	FSR0L+1, 1, 0
$047C	$CFEE	F004			MOVFF	POSTINC0, STACK_4
$0480	$5004	    			MOVF	STACK_4, 0, 0
$0482	$0A2E	    			XORLW	46
$0484	$E057	    			BZ	L_extraction_37
;GPS_Robot.c,91 :: 			raw_data[loop] = raw_data[loop] & 0x0F; // Changing to binary
$0486	$0E19	    			MOVLW	_raw_data
$0488	$6E04	    			MOVWF	STACK_4, 0
$048A	$0E00	    			MOVLW	@_raw_data
$048C	$6E05	    			MOVWF	STACK_4+1, 0
$048E	$5018	    			MOVF	_loop, 0, 0
$0490	$2604	    			ADDWF	STACK_4, 1, 0
$0492	$B0D8	    			BTFSC	STATUS, C, 0
$0494	$2A05	    			INCF	STACK_4+1, 1, 0
$0496	$C004	FFE9			MOVFF	STACK_4, FSR0L
$049A	$C005	FFEA			MOVFF	STACK_4+1, FSR0H
$049E	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$04A2	$0E0F	    			MOVLW	15
$04A4	$1600	    			ANDWF	STACK_0, 1, 0
$04A6	$C004	FFE1			MOVFF	STACK_4, FSR1L
$04AA	$C005	FFE2			MOVFF	STACK_4+1, FSR1H
$04AE	$C000	FFE6			MOVFF	STACK_0, POSTINC1
;GPS_Robot.c,92 :: 			raw_data[loop] = raw_data[loop] * cons; // Multiply with specific weight
$04B2	$0E19	    			MOVLW	_raw_data
$04B4	$6E64	    			MOVWF	FLOC_extraction+4, 0
$04B6	$0E00	    			MOVLW	@_raw_data
$04B8	$6E65	    			MOVWF	FLOC_extraction+5, 0
$04BA	$5018	    			MOVF	_loop, 0, 0
$04BC	$2664	    			ADDWF	FLOC_extraction+4, 1, 0
$04BE	$B0D8	    			BTFSC	STATUS, C, 0
$04C0	$2A65	    			INCF	FLOC_extraction+5, 1, 0
$04C2	$C064	FFE9			MOVFF	FLOC_extraction+4, FSR0L
$04C6	$C065	FFEA			MOVFF	FLOC_extraction+5, FSR0H
$04CA	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$04CE	$5000	    			MOVF	STACK_0, 0, 0
$04D0	$0260	    			MULWF	extraction_cons_L1, 0
$04D2	$CFF3	F000			MOVFF	PRODL, STACK_0
$04D6	$C064	FFE1			MOVFF	FLOC_extraction+4, FSR1L
$04DA	$C065	FFE2			MOVFF	FLOC_extraction+5, FSR1H
$04DE	$C000	FFE6			MOVFF	STACK_0, POSTINC1
;GPS_Robot.c,93 :: 			east = east + raw_data[loop];           // Storing North
$04E2	$0E19	    			MOVLW	_raw_data
$04E4	$6EE9	    			MOVWF	FSR0L, 0
$04E6	$0E00	    			MOVLW	@_raw_data
$04E8	$6EEA	    			MOVWF	FSR0L+1, 0
$04EA	$5018	    			MOVF	_loop, 0, 0
$04EC	$26E9	    			ADDWF	FSR0L, 1, 0
$04EE	$B0D8	    			BTFSC	STATUS, C, 0
$04F0	$2AEA	    			INCF	FSR0L+1, 1, 0
$04F2	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$04F6	$5000	    			MOVF	STACK_0, 0, 0
$04F8	$2643	    			ADDWF	_east, 1, 0
$04FA	$0E00	    			MOVLW	0
$04FC	$2244	    			ADDWFC	_east+1, 1, 0
$04FE	$2245	    			ADDWFC	_east+2, 1, 0
$0500	$2246	    			ADDWFC	_east+3, 1, 0
;GPS_Robot.c,94 :: 			cons /= 10;                             // Decreasing weight
$0502	$0E0A	    			MOVLW	10
$0504	$6E04	    			MOVWF	STACK_4, 0
$0506	$0E00	    			MOVLW	0
$0508	$6E05	    			MOVWF	STACK_4+1, 0
$050A	$6E06	    			MOVWF	STACK_4+2, 0
$050C	$6E07	    			MOVWF	STACK_4+3, 0
$050E	$C060	F000			MOVFF	extraction_cons_L1, STACK_0
$0512	$C061	F001			MOVFF	extraction_cons_L1+1, STACK_0+1
$0516	$C062	F002			MOVFF	extraction_cons_L1+2, STACK_0+2
$051A	$C063	F003			MOVFF	extraction_cons_L1+3, STACK_0+3
$051E	$EC04	F000			CALL	_div_32x32_u
$0522	$C000	F060			MOVFF	STACK_0, extraction_cons_L1
$0526	$C001	F061			MOVFF	STACK_0+1, extraction_cons_L1+1
$052A	$C002	F062			MOVFF	STACK_0+2, extraction_cons_L1+2
$052E	$C003	F063			MOVFF	STACK_0+3, extraction_cons_L1+3
;GPS_Robot.c,95 :: 			}
$0532	$D019	    			BRA	L_extraction_38
$0534	$	L_extraction_37:
;GPS_Robot.c,97 :: 			cons /= 10;
$0534	$0100	    			MOVLB	0
$0536	$0E0A	    			MOVLW	10
$0538	$6E04	    			MOVWF	STACK_4, 0
$053A	$0E00	    			MOVLW	0
$053C	$6E05	    			MOVWF	STACK_4+1, 0
$053E	$6E06	    			MOVWF	STACK_4+2, 0
$0540	$6E07	    			MOVWF	STACK_4+3, 0
$0542	$C060	F000			MOVFF	extraction_cons_L1, STACK_0
$0546	$C061	F001			MOVFF	extraction_cons_L1+1, STACK_0+1
$054A	$C062	F002			MOVFF	extraction_cons_L1+2, STACK_0+2
$054E	$C063	F003			MOVFF	extraction_cons_L1+3, STACK_0+3
$0552	$EC04	F000			CALL	_div_32x32_u
$0556	$C000	F060			MOVFF	STACK_0, extraction_cons_L1
$055A	$C001	F061			MOVFF	STACK_0+1, extraction_cons_L1+1
$055E	$C002	F062			MOVFF	STACK_0+2, extraction_cons_L1+2
$0562	$C003	F063			MOVFF	STACK_0+3, extraction_cons_L1+3
$0566	$	L_extraction_38:
;GPS_Robot.c,98 :: 			}
$0566	$	L_extraction_36:
;GPS_Robot.c,87 :: 			for(loop=26; loop<=(37-2); loop++)
$0566	$0100	    			MOVLB	0
$0568	$2A18	    			INCF	_loop, 1, 0
;GPS_Robot.c,98 :: 			}
$056A	$D77B	    			BRA	L_extraction_34
$056C	$	L_extraction_35:
;GPS_Robot.c,100 :: 			if(!PB1 && x==0)
$056C	$0100	    			MOVLB	0
$056E	$B283	    			BTFSC	PORTD, 1, 0
$0570	$D017	    			BRA	L_extraction_41
$0572	$5047	    			MOVF	_x, 0, 0
$0574	$0A00	    			XORLW	0
$0576	$E114	    			BNZ	L_extraction_41
$0578	$	L169_ex_L_extraction_41:
;GPS_Robot.c,102 :: 			x++;
$0578	$2A47	    			INCF	_x, 1, 0
;GPS_Robot.c,103 :: 			north1 = north;
$057A	$C03F	F048			MOVFF	_north, _north1
$057E	$C040	F049			MOVFF	_north+1, _north1+1
$0582	$C041	F04A			MOVFF	_north+2, _north1+2
$0586	$C042	F04B			MOVFF	_north+3, _north1+3
;GPS_Robot.c,104 :: 			east1 = north;
$058A	$C03F	F04C			MOVFF	_north, _east1
$058E	$C040	F04D			MOVFF	_north+1, _east1+1
$0592	$C041	F04E			MOVFF	_north+2, _east1+2
$0596	$C042	F04F			MOVFF	_north+3, _east1+3
;GPS_Robot.c,105 :: 			while(!PB1);
$059A	$	L_extraction_42:
$059A	$0100	    			MOVLB	0
$059C	$A283	    			BTFSS	PORTD, 1, 0
$059E	$D7FD	    			BRA	L_extraction_42
$05A0	$	L_extraction_43:
;GPS_Robot.c,106 :: 			}
$05A0	$	L_extraction_41:
;GPS_Robot.c,107 :: 			if(!PB1 && x==1)
$05A0	$0100	    			MOVLB	0
$05A2	$B283	    			BTFSC	PORTD, 1, 0
$05A4	$D017	    			BRA	L_extraction_46
$05A6	$5047	    			MOVF	_x, 0, 0
$05A8	$0A01	    			XORLW	1
$05AA	$E114	    			BNZ	L_extraction_46
$05AC	$	L190_ex_L_extraction_46:
;GPS_Robot.c,109 :: 			x++;
$05AC	$2A47	    			INCF	_x, 1, 0
;GPS_Robot.c,110 :: 			north2 = north;
$05AE	$C03F	F050			MOVFF	_north, _north2
$05B2	$C040	F051			MOVFF	_north+1, _north2+1
$05B6	$C041	F052			MOVFF	_north+2, _north2+2
$05BA	$C042	F053			MOVFF	_north+3, _north2+3
;GPS_Robot.c,111 :: 			east2 = east;
$05BE	$C043	F054			MOVFF	_east, _east2
$05C2	$C044	F055			MOVFF	_east+1, _east2+1
$05C6	$C045	F056			MOVFF	_east+2, _east2+2
$05CA	$C046	F057			MOVFF	_east+3, _east2+3
;GPS_Robot.c,112 :: 			while(!PB1);
$05CE	$	L_extraction_47:
$05CE	$0100	    			MOVLB	0
$05D0	$A283	    			BTFSS	PORTD, 1, 0
$05D2	$D7FD	    			BRA	L_extraction_47
$05D4	$	L_extraction_48:
;GPS_Robot.c,113 :: 			}
$05D4	$	L_extraction_46:
;GPS_Robot.c,114 :: 			if(!PB1 && x==2)
$05D4	$0100	    			MOVLB	0
$05D6	$B283	    			BTFSC	PORTD, 1, 0
$05D8	$D017	    			BRA	L_extraction_51
$05DA	$5047	    			MOVF	_x, 0, 0
$05DC	$0A02	    			XORLW	2
$05DE	$E114	    			BNZ	L_extraction_51
$05E0	$	L211_ex_L_extraction_51:
;GPS_Robot.c,116 :: 			x++;
$05E0	$2A47	    			INCF	_x, 1, 0
;GPS_Robot.c,117 :: 			north3 = north;
$05E2	$C03F	F058			MOVFF	_north, _north3
$05E6	$C040	F059			MOVFF	_north+1, _north3+1
$05EA	$C041	F05A			MOVFF	_north+2, _north3+2
$05EE	$C042	F05B			MOVFF	_north+3, _north3+3
;GPS_Robot.c,118 :: 			east3 = east;
$05F2	$C043	F05C			MOVFF	_east, _east3
$05F6	$C044	F05D			MOVFF	_east+1, _east3+1
$05FA	$C045	F05E			MOVFF	_east+2, _east3+2
$05FE	$C046	F05F			MOVFF	_east+3, _east3+3
;GPS_Robot.c,119 :: 			while(!PB1);
$0602	$	L_extraction_52:
$0602	$0100	    			MOVLB	0
$0604	$A283	    			BTFSS	PORTD, 1, 0
$0606	$D7FD	    			BRA	L_extraction_52
$0608	$	L_extraction_53:
;GPS_Robot.c,120 :: 			}
$0608	$	L_extraction_51:
;GPS_Robot.c,121 :: 			}
$0608	$	L_extraction_28:
;GPS_Robot.c,123 :: 			}
$0608	$0100	    			MOVLB	0
$060A	$0012	    			RETURN
$0B9C	$	_Usart_Init:
$0B9C	$8AAC	    			BSF	TXSTA, 5, 0
$0B9E	$0E90	    			MOVLW	144
$0BA0	$6EAB	    			MOVWF	RCSTA, 0
$0BA2	$8E94	    			BSF	TRISC, 7, 0
$0BA4	$9C94	    			BCF	TRISC, 6, 0
$0BA6	$	L_Usart_Init_0:
$0BA6	$AA9E	    			BTFSS	PIR1, 5, 0
$0BA8	$D003	    			BRA	L_Usart_Init_1
$0BAA	$CFAE	F064			MOVFF	RCREG, Usart_Init_tmp_L0
$0BAE	$D7FB	    			BRA	L_Usart_Init_0
$0BB0	$	L_Usart_Init_1:
$0BB0	$0012	    			RETURN
$060C	$	_main:
$060C	$0E47	    			MOVLW	71
$060E	$0100	    			MOVLB	0
$0610	$6F81	    			MOVWF	lstr1_GPS_Robot+0, 1
$0612	$0E50	    			MOVLW	80
$0614	$6F82	    			MOVWF	lstr1_GPS_Robot+1, 1
$0616	$0E53	    			MOVLW	83
$0618	$6F83	    			MOVWF	lstr1_GPS_Robot+2, 1
$061A	$0E20	    			MOVLW	32
$061C	$6F84	    			MOVWF	lstr1_GPS_Robot+3, 1
$061E	$0E20	    			MOVLW	32
$0620	$6F85	    			MOVWF	lstr1_GPS_Robot+4, 1
$0622	$0E52	    			MOVLW	82
$0624	$6F86	    			MOVWF	lstr1_GPS_Robot+5, 1
$0626	$0E4F	    			MOVLW	79
$0628	$6F87	    			MOVWF	lstr1_GPS_Robot+6, 1
$062A	$0E42	    			MOVLW	66
$062C	$6F88	    			MOVWF	lstr1_GPS_Robot+7, 1
$062E	$0E4F	    			MOVLW	79
$0630	$6F89	    			MOVWF	lstr1_GPS_Robot+8, 1
$0632	$0E54	    			MOVLW	84
$0634	$6F8A	    			MOVWF	lstr1_GPS_Robot+9, 1
$0636	$6B8B	    			CLRF	lstr1_GPS_Robot+10, 1
$0638	$0E55	    			MOVLW	85
$063A	$6F8C	    			MOVWF	lstr2_GPS_Robot+0, 1
$063C	$0E45	    			MOVLW	69
$063E	$6F8D	    			MOVWF	lstr2_GPS_Robot+1, 1
$0640	$0E54	    			MOVLW	84
$0642	$6F8E	    			MOVWF	lstr2_GPS_Robot+2, 1
$0644	$0E20	    			MOVLW	32
$0646	$6F8F	    			MOVWF	lstr2_GPS_Robot+3, 1
$0648	$0E4C	    			MOVLW	76
$064A	$6F90	    			MOVWF	lstr2_GPS_Robot+4, 1
$064C	$0E48	    			MOVLW	72
$064E	$6F91	    			MOVWF	lstr2_GPS_Robot+5, 1
$0650	$0E52	    			MOVLW	82
$0652	$6F92	    			MOVWF	lstr2_GPS_Robot+6, 1
$0654	$0E2C	    			MOVLW	44
$0656	$6F93	    			MOVWF	lstr2_GPS_Robot+7, 1
$0658	$0E20	    			MOVLW	32
$065A	$6F94	    			MOVWF	lstr2_GPS_Robot+8, 1
$065C	$0E46	    			MOVLW	70
$065E	$6F95	    			MOVWF	lstr2_GPS_Robot+9, 1
$0660	$0E53	    			MOVLW	83
$0662	$6F96	    			MOVWF	lstr2_GPS_Robot+10, 1
$0664	$0E44	    			MOVLW	68
$0666	$6F97	    			MOVWF	lstr2_GPS_Robot+11, 1
$0668	$6B98	    			CLRF	lstr2_GPS_Robot+12, 1
$066A	$0E53	    			MOVLW	83
$066C	$6F99	    			MOVWF	lstr3_GPS_Robot+0, 1
$066E	$0E54	    			MOVLW	84
$0670	$6F9A	    			MOVWF	lstr3_GPS_Robot+1, 1
$0672	$0E41	    			MOVLW	65
$0674	$6F9B	    			MOVWF	lstr3_GPS_Robot+2, 1
$0676	$0E52	    			MOVLW	82
$0678	$6F9C	    			MOVWF	lstr3_GPS_Robot+3, 1
$067A	$0E54	    			MOVLW	84
$067C	$6F9D	    			MOVWF	lstr3_GPS_Robot+4, 1
$067E	$0E45	    			MOVLW	69
$0680	$6F9E	    			MOVWF	lstr3_GPS_Robot+5, 1
$0682	$0E44	    			MOVLW	68
$0684	$6F9F	    			MOVWF	lstr3_GPS_Robot+6, 1
$0686	$0E20	    			MOVLW	32
$0688	$6FA0	    			MOVWF	lstr3_GPS_Robot+7, 1
$068A	$0E4D	    			MOVLW	77
$068C	$6FA1	    			MOVWF	lstr3_GPS_Robot+8, 1
$068E	$0E4F	    			MOVLW	79
$0690	$6FA2	    			MOVWF	lstr3_GPS_Robot+9, 1
$0692	$0E56	    			MOVLW	86
$0694	$6FA3	    			MOVWF	lstr3_GPS_Robot+10, 1
$0696	$0E49	    			MOVLW	73
$0698	$6FA4	    			MOVWF	lstr3_GPS_Robot+11, 1
$069A	$0E4E	    			MOVLW	78
$069C	$6FA5	    			MOVWF	lstr3_GPS_Robot+12, 1
$069E	$0E47	    			MOVLW	71
$06A0	$6FA6	    			MOVWF	lstr3_GPS_Robot+13, 1
$06A2	$6BA7	    			CLRF	lstr3_GPS_Robot+14, 1
;GPS_Robot.c,125 :: 			void main(void)
;GPS_Robot.c,129 :: 			TRISB=0X00;
$06A4	$6A93	    			CLRF	TRISB, 0
;GPS_Robot.c,130 :: 			TRISC=0X80;
$06A6	$0E80	    			MOVLW	128
$06A8	$6E94	    			MOVWF	TRISC, 0
;GPS_Robot.c,131 :: 			TRISD=0xFF;
$06AA	$0EFF	    			MOVLW	255
$06AC	$6E95	    			MOVWF	TRISD, 0
;GPS_Robot.c,132 :: 			rb = rf = lb = lf = 1;
$06AE	$8482	    			BSF	PORTC, 2, 0
$06B0	$6A01	    			CLRF	STACK_1, 0
$06B2	$B482	    			BTFSC	PORTC, 2, 0
$06B4	$2A01	    			INCF	STACK_1, 1, 0
$06B6	$0E00	    			MOVLW	0
$06B8	$B001	    			BTFSC	STACK_1, 0, 0
$06BA	$0E08	    			MOVLW	8
$06BC	$1882	    			XORWF	PORTC, 0, 0
$06BE	$0B08	    			ANDLW	8
$06C0	$1A82	    			XORWF	PORTC, 1, 0
$06C2	$0E00	    			MOVLW	0
$06C4	$B001	    			BTFSC	STACK_1, 0, 0
$06C6	$0E02	    			MOVLW	2
$06C8	$1882	    			XORWF	PORTC, 0, 0
$06CA	$0B02	    			ANDLW	2
$06CC	$1A82	    			XORWF	PORTC, 1, 0
$06CE	$0E00	    			MOVLW	0
$06D0	$B001	    			BTFSC	STACK_1, 0, 0
$06D2	$0E01	    			MOVLW	1
$06D4	$1882	    			XORWF	PORTC, 0, 0
$06D6	$0B01	    			ANDLW	1
$06D8	$1A82	    			XORWF	PORTC, 1, 0
;GPS_Robot.c,133 :: 			x=0;
$06DA	$6A47	    			CLRF	_x, 0
;GPS_Robot.c,135 :: 			Usart_Init(4800);
$06DC	$0E40	    			MOVLW	64
$06DE	$6EAF	    			MOVWF	SPBRG, 0
$06E0	$94AC	    			BCF	TXSTA, BRGH, 0
$06E2	$ECCE	F005			CALL	_Usart_Init
;GPS_Robot.c,136 :: 			Lcd_Init(&PORTB);
$06E6	$0E81	    			MOVLW	PORTB
$06E8	$6E60	    			MOVWF	FARG_Lcd_Init+0, 0
$06EA	$0E0F	    			MOVLW	@PORTB
$06EC	$6E61	    			MOVWF	FARG_Lcd_Init+1, 0
$06EE	$EC96	F004			CALL	_Lcd_Init
;GPS_Robot.c,137 :: 			Lcd_Cmd(LCD_CURSOR_OFF);
$06F2	$0E0C	    			MOVLW	12
$06F4	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$06F6	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,138 :: 			Lcd_Out(1,4,"GPS  ROBOT");
$06FA	$0E01	    			MOVLW	1
$06FC	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$06FE	$0E04	    			MOVLW	4
$0700	$6E61	    			MOVWF	FARG_Lcd_Out+1, 0
$0702	$0E81	    			MOVLW	lstr1_GPS_Robot
$0704	$6E62	    			MOVWF	FARG_Lcd_Out+2, 0
$0706	$0E00	    			MOVLW	@lstr1_GPS_Robot
$0708	$6E63	    			MOVWF	FARG_Lcd_Out+3, 0
$070A	$EC5A	F005			CALL	_Lcd_Out
;GPS_Robot.c,139 :: 			Lcd_Out(2,3,"UET LHR, FSD");
$070E	$0E02	    			MOVLW	2
$0710	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0712	$0E03	    			MOVLW	3
$0714	$6E61	    			MOVWF	FARG_Lcd_Out+1, 0
$0716	$0E8C	    			MOVLW	lstr2_GPS_Robot
$0718	$6E62	    			MOVWF	FARG_Lcd_Out+2, 0
$071A	$0E00	    			MOVLW	@lstr2_GPS_Robot
$071C	$6E63	    			MOVWF	FARG_Lcd_Out+3, 0
$071E	$EC5A	F005			CALL	_Lcd_Out
;GPS_Robot.c,140 :: 			Delay_1sec();Delay_1sec();Delay_1sec();
$0722	$EC9E	F005			CALL	_Delay_1sec
$0726	$EC9E	F005			CALL	_Delay_1sec
$072A	$EC9E	F005			CALL	_Delay_1sec
;GPS_Robot.c,141 :: 			Lcd_Cmd(LCD_CLEAR);
$072E	$0E01	    			MOVLW	1
$0730	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0732	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,142 :: 			while(1)
$0736	$	L_main_54:
;GPS_Robot.c,144 :: 			while(1)
$0736	$	L_main_56:
;GPS_Robot.c,146 :: 			while(gps_status==0)
$0736	$	L_main_58:
$0736	$503E	    			MOVF	_gps_status, 0, 0
$0738	$0A00	    			XORLW	0
$073A	$E103	    			BNZ	L_main_59
;GPS_Robot.c,148 :: 			GPS();
$073C	$EC0E	F004			CALL	_GPS
;GPS_Robot.c,149 :: 			}
$0740	$D7FA	    			BRA	L_main_58
$0742	$	L_main_59:
;GPS_Robot.c,150 :: 			gps_status=0;
$0742	$6A3E	    			CLRF	_gps_status, 0
;GPS_Robot.c,151 :: 			extraction();
$0744	$EC8E	F001			CALL	_extraction
;GPS_Robot.c,152 :: 			if (x==3)
$0748	$5047	    			MOVF	_x, 0, 0
$074A	$0A03	    			XORLW	3
$074C	$E001	    			BZ	L_main_57
;GPS_Robot.c,155 :: 			}
$074E	$	L_main_60:
;GPS_Robot.c,156 :: 			}
$074E	$D7F3	    			BRA	L_main_56
$0750	$	L_main_57:
;GPS_Robot.c,157 :: 			x=0;
$0750	$6A47	    			CLRF	_x, 0
;GPS_Robot.c,158 :: 			while(PB2);
$0752	$	L_main_61:
$0752	$B483	    			BTFSC	PORTD, 2, 0
$0754	$D7FE	    			BRA	L_main_61
$0756	$	L_main_62:
;GPS_Robot.c,159 :: 			Lcd_Cmd(LCD_CLEAR);
$0756	$0E01	    			MOVLW	1
$0758	$6E67	    			MOVWF	FARG_Lcd_Cmd+0, 0
$075A	$EC10	F005			CALL	_Lcd_Cmd
;GPS_Robot.c,160 :: 			while(1)
$075E	$	L_main_63:
;GPS_Robot.c,162 :: 			Lcd_Out(1,1,"STARTED MOVING");
$075E	$0E01	    			MOVLW	1
$0760	$6E60	    			MOVWF	FARG_Lcd_Out+0, 0
$0762	$0E01	    			MOVLW	1
$0764	$6E61	    			MOVWF	FARG_Lcd_Out+1, 0
$0766	$0E99	    			MOVLW	lstr3_GPS_Robot
$0768	$6E62	    			MOVWF	FARG_Lcd_Out+2, 0
$076A	$0E00	    			MOVLW	@lstr3_GPS_Robot
$076C	$6E63	    			MOVWF	FARG_Lcd_Out+3, 0
$076E	$EC5A	F005			CALL	_Lcd_Out
;GPS_Robot.c,164 :: 			while(gps_status==0)
$0772	$	L_main_65:
$0772	$503E	    			MOVF	_gps_status, 0, 0
$0774	$0A00	    			XORLW	0
$0776	$E103	    			BNZ	L_main_66
;GPS_Robot.c,166 :: 			GPS();
$0778	$EC0E	F004			CALL	_GPS
;GPS_Robot.c,167 :: 			}
$077C	$D7FA	    			BRA	L_main_65
$077E	$	L_main_66:
;GPS_Robot.c,168 :: 			gps_status=0;
$077E	$6A3E	    			CLRF	_gps_status, 0
;GPS_Robot.c,169 :: 			extraction();
$0780	$EC8E	F001			CALL	_extraction
;GPS_Robot.c,170 :: 			error_north = north1 - north;
$0784	$C048	F001			MOVFF	_north1, STACK_1
$0788	$C049	F002			MOVFF	_north1+1, STACK_1+1
$078C	$C04A	F003			MOVFF	_north1+2, STACK_1+2
$0790	$C04B	F004			MOVFF	_north1+3, STACK_1+3
$0794	$503F	    			MOVF	_north, 0, 0
$0796	$5E01	    			SUBWF	STACK_1, 1, 0
$0798	$5040	    			MOVF	_north+1, 0, 0
$079A	$5A02	    			SUBWFB	STACK_1+1, 1, 0
$079C	$5041	    			MOVF	_north+2, 0, 0
$079E	$5A03	    			SUBWFB	STACK_1+2, 1, 0
$07A0	$5042	    			MOVF	_north+3, 0, 0
$07A2	$5A04	    			SUBWFB	STACK_1+3, 1, 0
;GPS_Robot.c,171 :: 			error_east = east1 - east;
$07A4	$C04C	F0A8			MOVFF	_east1, main_error_east_L0
$07A8	$C04D	F0A9			MOVFF	_east1+1, main_error_east_L0+1
$07AC	$C04E	F0AA			MOVFF	_east1+2, main_error_east_L0+2
$07B0	$C04F	F0AB			MOVFF	_east1+3, main_error_east_L0+3
$07B4	$5043	    			MOVF	_east, 0, 0
$07B6	$0100	    			MOVLB	0
$07B8	$5FA8	    			SUBWF	main_error_east_L0, 1, 1
$07BA	$5044	    			MOVF	_east+1, 0, 0
$07BC	$5BA9	    			SUBWFB	main_error_east_L0+1, 1, 1
$07BE	$5045	    			MOVF	_east+2, 0, 0
$07C0	$5BAA	    			SUBWFB	main_error_east_L0+2, 1, 1
$07C2	$5046	    			MOVF	_east+3, 0, 0
$07C4	$5BAB	    			SUBWFB	main_error_east_L0+3, 1, 1
;GPS_Robot.c,172 :: 			lf=0;
$07C6	$9482	    			BCF	PORTC, 2, 0
;GPS_Robot.c,173 :: 			rf=0;
$07C8	$9282	    			BCF	PORTC, 1, 0
;GPS_Robot.c,174 :: 			if (error_north <= 20 || error_east <= 20)
$07CA	$5004	    			MOVF	STACK_1+3, 0, 0
$07CC	$0800	    			SUBLW	0
$07CE	$E108	    			BNZ	L_main_72
$07D0	$5003	    			MOVF	STACK_1+2, 0, 0
$07D2	$0800	    			SUBLW	0
$07D4	$E105	    			BNZ	L_main_72
$07D6	$5002	    			MOVF	STACK_1+1, 0, 0
$07D8	$0800	    			SUBLW	0
$07DA	$E102	    			BNZ	L_main_72
$07DC	$5001	    			MOVF	STACK_1, 0, 0
$07DE	$0814	    			SUBLW	20
$07E0	$	L_main_72:
$07E0	$E20C	    			BC	L279_ex_L_main_69
$07E2	$51AB	    			MOVF	main_error_east_L0+3, 0, 1
$07E4	$0800	    			SUBLW	0
$07E6	$E108	    			BNZ	L_main_73
$07E8	$51AA	    			MOVF	main_error_east_L0+2, 0, 1
$07EA	$0800	    			SUBLW	0
$07EC	$E105	    			BNZ	L_main_73
$07EE	$51A9	    			MOVF	main_error_east_L0+1, 0, 1
$07F0	$0800	    			SUBLW	0
$07F2	$E102	    			BNZ	L_main_73
$07F4	$51A8	    			MOVF	main_error_east_L0, 0, 1
$07F6	$0814	    			SUBLW	20
$07F8	$	L_main_73:
$07F8	$E30C	    			BNC	L_main_69
$07FA	$	L279_ex_L_main_69:
;GPS_Robot.c,176 :: 			lf=rf=1;
$07FA	$0100	    			MOVLB	0
$07FC	$8282	    			BSF	PORTC, 1, 0
$07FE	$6A01	    			CLRF	STACK_1, 0
$0800	$B282	    			BTFSC	PORTC, 1, 0
$0802	$2A01	    			INCF	STACK_1, 1, 0
$0804	$0E00	    			MOVLW	0
$0806	$B001	    			BTFSC	STACK_1, 0, 0
$0808	$0E04	    			MOVLW	4
$080A	$1882	    			XORWF	PORTC, 0, 0
$080C	$0B04	    			ANDLW	4
$080E	$1A82	    			XORWF	PORTC, 1, 0
;GPS_Robot.c,177 :: 			break;
$0810	$D002	    			BRA	L_main_64
;GPS_Robot.c,178 :: 			}
$0812	$	L_main_69:
;GPS_Robot.c,179 :: 			}
$0812	$0100	    			MOVLB	0
$0814	$D7A4	    			BRA	L_main_63
$0816	$	L_main_64:
;GPS_Robot.c,181 :: 			while(1);
$0816	$	L_main_70:
$0816	$0100	    			MOVLB	0
$0818	$D7FE	    			BRA	L_main_70
;GPS_Robot.c,183 :: 			}
$081A	$D7FF	    			BRA	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0008		Div_32x32_U
$031C		extraction
$060C		main
$081C		GPS
$092C		Lcd_Init
$0A20		Lcd_Cmd
$0AB4		Lcd_Out
$0B3C		Delay_1sec
$0B7E		Delay_5500us
$0B9C		Usart_Init
$0BB2		Usart_Read
$0BC4		Lcd_Chr_Cp
$0BD4		Delay_1us
$0BE0		Usart_Data_Ready
$0BEC		Delay_50us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0008		_Div_32x32_U:
$0042		LOOPU3232A:
$007C		UADD22LA:
$009E		UOK22LA:
$00E0		UADD22L8:
$0102		UOK22L8:
$0108		LOOPU3232B:
$0142		UADD22LB:
$0164		UOK22LB:
$01A6		UADD22L16:
$01C8		UOK22L16:
$01CE		LOOPU3232C:
$0208		UADD22LC:
$022A		UOK22LC:
$026C		UADD22L24:
$028E		UOK22L24:
$0294		LOOPU3232D:
$02CE		UADD22LD:
$02F0		UOK22LD:
$031A		UOK22L:
$031C		_extraction:
$033C		L_extraction_29:
$040C		L_extraction_32:
$043E		L_extraction_31:
$043E		L_extraction_33:
$0444		L_extraction_30:
$0462		L_extraction_34:
$0534		L_extraction_37:
$0566		L_extraction_36:
$0566		L_extraction_38:
$056C		L_extraction_35:
$0578		L169_ex_L_extraction_41:
$059A		L_extraction_42:
$05A0		L_extraction_41:
$05A0		L_extraction_43:
$05AC		L190_ex_L_extraction_46:
$05CE		L_extraction_47:
$05D4		L_extraction_46:
$05D4		L_extraction_48:
$05E0		L211_ex_L_extraction_51:
$0602		L_extraction_52:
$0608		L_extraction_28:
$0608		L_extraction_51:
$0608		L_extraction_53:
$060C		_main:
$0736		L_main_54:
$0736		L_main_56:
$0736		L_main_58:
$0742		L_main_59:
$074E		L_main_60:
$0750		L_main_57:
$0752		L_main_61:
$0756		L_main_62:
$075E		L_main_63:
$0772		L_main_65:
$077E		L_main_66:
$07E0		L_main_72:
$07F8		L_main_73:
$07FA		L279_ex_L_main_69:
$0812		L_main_69:
$0816		L_main_64:
$0816		L_main_70:
$081C		_GPS:
$0824		L_GPS_0:
$0830		L_GPS_2:
$0838		L_GPS_3:
$0844		L_GPS_5:
$084C		L_GPS_6:
$0858		L_GPS_8:
$0860		L_GPS_9:
$086A		L_GPS_11:
$0872		L_GPS_12:
$087C		L_GPS_14:
$0884		L_GPS_15:
$0890		L_GPS_17:
$0896		L_GPS_20:
$089E		L_GPS_21:
$08BE		L_GPS_19:
$08C2		L_GPS_18:
$08D6		L_GPS_22:
$08F4		L_GPS_24:
$08F8		L_GPS_23:
$0904		L_GPS_25:
$0922		L_GPS_27:
$0926		L_GPS_26:
$092A		L_GPS_1:
$092A		L_GPS_10:
$092A		L_GPS_13:
$092A		L_GPS_16:
$092A		L_GPS_4:
$092A		L_GPS_7:
$092C		_Lcd_Init:
$0A20		_Lcd_Cmd:
$0A3C		L_Lcd_Cmd_0:
$0A64		L_Lcd_Cmd_1:
$0A66		L_Lcd_Cmd_2:
$0A70		L_Lcd_Cmd_3:
$0A98		L_Lcd_Cmd_4:
$0A9A		L_Lcd_Cmd_5:
$0AAE		L_Lcd_Cmd_6:
$0AB2		L_Lcd_Cmd_7:
$0AB4		_Lcd_Out:
$0AB6		L_Lcd_Out_19:
$0ABC		L_Lcd_Out_20:
$0AC2		L_Lcd_Out_21:
$0AC8		L_Lcd_Out_22:
$0ACE		L_Lcd_Out_23:
$0AD4		L_Lcd_Out_17:
$0AEE		L_Lcd_Out_18:
$0B08		L_Lcd_Out_24:
$0B36		L_Lcd_Out_25:
$0B3C		_Delay_1sec:
$0B7E		_Delay_5500us:
$0B9C		_Usart_Init:
$0BA6		L_Usart_Init_0:
$0BB0		L_Usart_Init_1:
$0BB2		_Usart_Read:
$0BBE		L_Usart_Read_2:
$0BC4		_Lcd_Chr_Cp:
$0BD4		_Delay_1us:
$0BE0		_Usart_Data_Ready:
$0BEC		_Delay_50us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		STACK_0
$0001		STACK_1
$0002		STACK_2
$0003		STACK_3
$0004		STACK_4
$0005		STACK_5
$0006		STACK_6
$0007		STACK_7
$0008		STACK_8
$0009		STACK_9
$000A		STACK_10
$000B		STACK_11
$000C		STACK_12
$000D		STACK_13
$000E		STACK_14
$000F		STACK_15
$0010		STACK_16
$0011		STACK_17
$0012		STACK_18
$0013		STACK_19
$0014		STACK_20
$0015		Lcd_main_global_portaddress
$0017		Lcd_cmd_status
$0018		_loop
$0019		_raw_data
$003E		_gps_status
$003F		_north
$0043		_east
$0047		_x
$0048		_north1
$004C		_east1
$0050		_north2
$0054		_east2
$0058		_north3
$005C		_east3
$0060		
$0060		extraction_cons_L1
$0060		FARG_Lcd_Init+0
$0060		FARG_Lcd_Out+0
$0060		FARG_Usart_Init+0
$0061		FARG_Lcd_Out+1
$0062		FARG_Lcd_Out+2
$0064		
$0064		Lcd_Out_i_L0
$0064		Usart_Init_tmp_L0
$0066		FARG_Lcd_Chr_Cp+0
$0066		Usart_Read_tmp_L0
$0067		FARG_Lcd_Cmd+0
$0081		lstr1_GPS_Robot
$008C		lstr2_GPS_Robot
$0099		lstr3_GPS_Robot
$00A8		main_error_east_L0
$0F81		PORTB
$0F82		PORTC
$0F83		PORTD
$0F93		TRISB
$0F94		TRISC
$0F95		TRISD
$0F9E		PIR1
$0FAB		RCSTA
$0FAC		TXSTA
$0FAE		RCREG
$0FAF		SPBRG
$0FD8		STATUS
$0FD9		FSR2L
$0FDA		FSR2H
$0FDB		PLUSW2
$0FDC		PREINC2
$0FDD		POSTDEC2
$0FDE		POSTINC2
$0FDF		INDF2
$0FE0		BSR
$0FE1		FSR1L
$0FE2		FSR1H
$0FE3		PLUSW1
$0FE4		PREINC1
$0FE5		POSTDEC1
$0FE6		POSTINC1
$0FE7		INDF1
$0FE8		WREG
$0FE9		FSR0L
$0FEA		FSR0H
$0FEB		PLUSW0
$0FEC		PREINC0
$0FED		POSTDEC0
$0FEE		POSTINC0
$0FEF		INDF0
$0FF3		PRODL
$0FF4		PRODH
$0FF5		TABLAT
$0FF6		TBLPTRL
$0FF7		TBLPTRH
$0FF8		TBLPTRU
$0FF9		PCL
$0FFA		PCLATH
$0FFB		PCLATU
$0FFD		TOSL
$0FFE		TOSH
$0FFF		TOSU


